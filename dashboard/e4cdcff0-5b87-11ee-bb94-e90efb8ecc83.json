{
  "entityType" : "DASHBOARD",
  "entity" : {
    "assignedCustomers" : null,
    "configuration" : {
      "description" : "",
      "widgets" : {
        "7418f1c8-a03a-dbd6-7095-c55c58887b2f" : {
          "isSystemType" : true,
          "bundleAlias" : "cards",
          "typeAlias" : "html_value_card",
          "type" : "latest",
          "title" : "New widget",
          "image" : null,
          "description" : null,
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "09d911fe-e027-2993-9d45-243ac73cff59",
              "filterId" : null,
              "dataKeys" : [ ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY"
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1683549171832,
                  "endTimeMs" : 1683635571832
                },
                "quickInterval" : "CURRENT_DAY"
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div id=\"segnalazione\" class='card'>\n    <h1>Guasto</h1>\n    <i class=\"fa fa-cogs\" aria-hidden=\"true\"></i>\n</div>",
              "cardCss" : "@media (min-width: 1500px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n@media (max-width: 960px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n@media (min-width:960px) and (max-width: 1500px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n.card {\n    font-weight: bold;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    \n}\n.card:hover{\n    transform: scale(0.9);\n}\nh1{\n    flex-wrap: wrap;\n    font-weight: bold;\n}\n.fa{\n    color:#facc15;\n}"
            },
            "title" : "New HTML Value Card",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "elementClick" : [ {
                "name" : "segnalazione",
                "icon" : "more_horiz",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<form #addEntityForm=\"ngForm\" [formGroup]=\"addEntityFormGroup\"\n      (ngSubmit)=\"save()\" class=\"add-entity-form\">\n    <mat-toolbar fxLayout=\"row\" color=\"primary\">\n        <h2>Nuova Segnalazione</h2>\n        <span fxFlex></span>\n        <button mat-icon-button (click)=\"cancel()\" type=\"button\">\n            <mat-icon class=\"material-icons\">close</mat-icon>\n        </button>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px; width: 600px \" *ngIf=\"!(isLoading$ | async)\"></div>\n    <div mat-dialog-content fxLayout=\"column\">\n        <div fxLayout=\"column\" fxLayoutGap=\"2px\" fxLayout.md=\"column\" fxLayoutGap.md=\"0\">\n            <span style=\"font-size:20px;font-weight:bold;text-align:center;\">Guasto</span><br>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Oggetto</mat-label>\n                <input matInput formControlName=\"oggetto\" required>\n            </mat-form-field>\n            <section fxLayout=\"row\" fxLayoutAlign=\"center\" fxLayoutGap=\"10px\" fxLayout.xs=\"column\" fxLayoutGap.xs=\"0\">\n                <mat-form-field appearance=\"fill\" style=\"width: 300px\">\n                  <mat-label>Data inizio</mat-label>\n                  <mat-datetimepicker-toggle [for]=\"DatePicker\" matPrefix></mat-datetimepicker-toggle>\n                  <mat-datetimepicker #DatePicker type=\"date\" openOnFocus=\"true\"></mat-datetimepicker>\n                  <input matInput [disabled]=\"disabled\"  [matDatetimepicker]=\"DatePicker\" formControlName=\"eventDate\" required>\n                  <mat-hint>GG/MM/AAAA</mat-hint>\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\"  style=\"width: 300px\">\n                  <mat-label>Ora inizio</mat-label>\n                  <mat-datetimepicker-toggle [for]=\"TimePicker\" matPrefix></mat-datetimepicker-toggle>\n                  <mat-datetimepicker #TimePicker type=\"time\" openOnFocus=\"true\"></mat-datetimepicker>\n                  <input matInput [disabled]=\"disabled\" [matDatetimepicker]=\"TimePicker\" formControlName=\"eventTime\" required><mat-hint>H/Min</mat-hint>\n                </mat-form-field>\n            </section>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Durata</mat-label>\n                <input matInput formControlName=\"durata\" required>\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Note</mat-label>\n              <textarea matInput formControlName=\"note\"></textarea>\n            </mat-form-field>\n            <!--<mat-form-field appearance=\"fill\">\n                <mat-label>Registrato dall'utente</mat-label>\n                <input matInput formControlName=\"user\" required>\n            </mat-form-field>-->\n        </div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\n        <button mat-button color=\"primary\"\n                type=\"button\"\n                [disabled]=\"(isLoading$ | async)\"\n                (click)=\"cancel()\" cdkFocusInitial>\n            Cancella\n        </button>\n        <button mat-icon-button (click)=\"test()\" type=\"button\">\n            <mat-icon class=\"material-icons\">test</mat-icon>\n        </button>\n        <button mat-button mat-raised-button color=\"primary\"\n                type=\"submit\"\n                [disabled]=\"(isLoading$ | async) || addEntityForm.invalid || !addEntityForm.dirty\">\n            Invia\n        </button>\n    </div>\n</form>\n",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nvar user = widgetContext.currentUser.sub;\nlet segnalazione = \"Guasto\";\n\nopenAddEntityDialog();\n\nfunction openAddEntityDialog() {\n    customDialog.customDialog(htmlTemplate, AddEntityDialogController).subscribe();\n}\n\n\nfunction AddEntityDialogController(instance) {\n    let vm = instance;\n    vm.addEntityFormGroup = vm.fb.group({\n     oggetto: [null, [vm.validators.required]],\n     eventDate:[null, [vm.validators.required]],\n     eventTime:[null, [vm.validators.required]],\n     durata:[null, [vm.validators.required]],\n     note: [\"\"]\n    });\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n    vm.save = function() {\n        var formData=vm.addEntityFormGroup.value;\n        formData.eventDate.setHours(formData.eventTime.getHours());\n        formData.eventDate.setMinutes(formData.eventTime.getMinutes());\n        vm.addEntityFormGroup.markAsPristine();\n        var telData={\"ts\":formData.eventDate.valueOf(), \"values\":{\"maloreoggetto\":formData.oggetto, \"maloreuser\":user, \"maloredurata\":formData.durata, \"malorenote\":formData.note, \"maloreevento\":segnalazione}};\n        widgetContext.http.post('/api/plugins/telemetry/'+entityId.entityType+'/'+entityId.id+'/timeseries/ANY?scope=ANY', telData).subscribe(data =>\n        {\n        // console.log(\"data: \",data)\n            // widgetContext.updateAliases();\n            vm.dialogRef.close(null);\n        },function(error){\n            console.log(error);\n        });\n    };\n\n}\nfunction test(){\n    showImageDialog('Photo', imageUrl);\n}\n//saveEntityImageAttribute('image', imageUrl);\n\nfunction showImageDialog(title, imageUrl) {\n    setTimeout(function() {\n        widgetContext.customDialog.customDialog(imageDialogTemplate, ImageDialogController, {imageUrl: imageUrl, title: title}).subscribe();\n    }, 100);\n}\n\nfunction saveEntityImageAttribute(attributeName, imageUrl) {\n    if (entityId) {\n        let attributes = [{\n            key: attributeName, value: imageUrl\n        }];\n        widgetContext.attributeService.saveEntityAttributes(entityId, \"SERVER_SCOPE\", attributes).subscribe(\n           function() {\n               widgetContext.showSuccessToast('Image attribute saved!');\n           },\n           function(error) {\n               widgetContext.dialogs.alert('Image attribute save failed', JSON.stringify(error));\n           }\n        );\n    }\n}\n\nvar\n  imageDialogTemplate =\n    '<div aria-label=\"Image\">' +\n    '<form #theForm=\"ngForm\">' +\n    '<mat-toolbar fxLayout=\"row\" color=\"primary\">' +\n    '<h2>{{title}}</h2>' +\n    '<span fxFlex></span>' +\n    '<button mat-icon-button (click)=\"close()\">' +\n    '<mat-icon>close</mat-icon>' +\n    '</button>' +\n    '</mat-toolbar>' +\n    '<div mat-dialog-content>' +\n    '<div class=\"mat-content mat-padding\">' +\n    '<div fxLayout=\"column\" fxFlex>' +\n    '<div style=\"padding-top: 20px;\">' +\n    '<img [src]=\"imageUrl\" style=\"height: 300px;\"/>' +\n    '</div>' +\n    '</div>' +\n    '</div>' +\n    '</div>' +\n    '<div mat-dialog-actions fxLayout=\"row\">' +\n    '<span fxFlex></span>' +\n    '<button mat-button (click)=\"close()\" style=\"margin-right:20px;\">Close</button>' +\n    '</div>' +\n    '</form>' +\n    '</div>';\n\nfunction ImageDialogController(instance) {\n  let vm = instance;\n  vm.title = vm.data.title;\n  vm.imageUrl = vm.data.imageUrl;\n  vm.close = function ()\n  {\n    vm.dialogRef.close(null);\n  }\n}\n\n",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "b1cb8f72-0cc1-654a-dc07-80ab5ffa429b"
              } ]
            },
            "enableDataExport" : false,
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : "",
            "margin" : "0px"
          },
          "row" : 0,
          "col" : 0,
          "id" : "7418f1c8-a03a-dbd6-7095-c55c58887b2f"
        },
        "2d05bbf9-0dd2-f4ce-6d17-371fcce84fb5" : {
          "isSystemType" : true,
          "bundleAlias" : "cards",
          "typeAlias" : "html_value_card",
          "type" : "latest",
          "title" : "New widget",
          "image" : null,
          "description" : null,
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "09d911fe-e027-2993-9d45-243ac73cff59",
              "filterId" : null,
              "dataKeys" : [ ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY"
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1683549171832,
                  "endTimeMs" : 1683635571832
                },
                "quickInterval" : "CURRENT_DAY"
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div id=\"segnalazione\" class='card'>\n    <h1>Fermo Generico</h1>\n    <i class=\"fa fa-pause\" aria-hidden=\"true\"></i>\n</div>",
              "cardCss" : "@media (min-width: 1500px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n@media (max-width: 960px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n@media (min-width:960px) and (max-width: 1500px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n.card {\n    font-weight: bold;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n.card:hover{\n    transform: scale(0.9);\n}\nh1{\n    flex-wrap: wrap;\n    font-weight: bold;\n}\n.fa{\n    color:#84cc16;\n}"
            },
            "title" : "New HTML Value Card",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "elementClick" : [ {
                "name" : "segnalazione",
                "icon" : "more_horiz",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<form #addEntityForm=\"ngForm\" [formGroup]=\"addEntityFormGroup\"\r\n      (ngSubmit)=\"save()\" class=\"add-entity-form\">\r\n    <mat-toolbar fxLayout=\"row\" color=\"primary\">\r\n        <h2>Nuova Segnalazione</h2>\r\n        <span fxFlex></span>\r\n        <button mat-icon-button (click)=\"cancel()\" type=\"button\">\r\n            <mat-icon class=\"material-icons\">close</mat-icon>\r\n        </button>\r\n    </mat-toolbar>\r\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\r\n    </mat-progress-bar>\r\n    <div style=\"height: 4px; width: 600px \" *ngIf=\"!(isLoading$ | async)\"></div>\r\n    <div mat-dialog-content fxLayout=\"column\">\r\n        <div fxLayout=\"column\" fxLayoutGap=\"2px\" fxLayout.md=\"column\" fxLayoutGap.md=\"0\">\r\n            <span style=\"font-size:20px;font-weight:bold;text-align:center;\">Fermo Generico</span><br>\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Oggetto</mat-label>\r\n                <input matInput formControlName=\"oggetto\" required>\r\n            </mat-form-field>\r\n            <section fxLayout=\"row\" fxLayoutAlign=\"center\" fxLayoutGap=\"10px\" fxLayout.xs=\"column\" fxLayoutGap.xs=\"0\">\r\n                <mat-form-field appearance=\"fill\" style=\"width: 300px\">\r\n                  <mat-label>Data inizio</mat-label>\r\n                  <mat-datetimepicker-toggle [for]=\"DatePicker\" matPrefix></mat-datetimepicker-toggle>\r\n                  <mat-datetimepicker #DatePicker type=\"date\" openOnFocus=\"true\"></mat-datetimepicker>\r\n                  <input matInput [disabled]=\"disabled\"  [matDatetimepicker]=\"DatePicker\" formControlName=\"eventDate\" required>\r\n                  <mat-hint>GG/MM/AAAA</mat-hint>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"fill\"  style=\"width: 300px\">\r\n                  <mat-label>Ora inizio</mat-label>\r\n                  <mat-datetimepicker-toggle [for]=\"TimePicker\" matPrefix></mat-datetimepicker-toggle>\r\n                  <mat-datetimepicker #TimePicker type=\"time\" openOnFocus=\"true\"></mat-datetimepicker>\r\n                  <input matInput [disabled]=\"disabled\" [matDatetimepicker]=\"TimePicker\" formControlName=\"eventTime\" required><mat-hint>H/Min</mat-hint>\r\n                </mat-form-field>\r\n            </section>\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Durata</mat-label>\r\n                <input matInput formControlName=\"durata\" required>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\">\r\n              <mat-label>Note</mat-label>\r\n              <textarea matInput formControlName=\"note\"></textarea>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Registrato dall'utente</mat-label>\r\n                <input matInput formControlName=\"user\" required>\r\n            </mat-form-field>\r\n        </div>\r\n    </div>\r\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\r\n        <button mat-button color=\"primary\"\r\n                type=\"button\"\r\n                [disabled]=\"(isLoading$ | async)\"\r\n                (click)=\"cancel()\" cdkFocusInitial>\r\n            Cancella\r\n        </button>\r\n        <button mat-button mat-raised-button color=\"primary\"\r\n                type=\"submit\"\r\n                [disabled]=\"(isLoading$ | async) || addEntityForm.invalid || !addEntityForm.dirty\">\r\n            Invia\r\n        </button>\r\n    </div>\r\n</form>\r\n",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\r\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\r\n\r\nlet segnalazione = \"Fermo Generico\";\r\n    openAddEntityDialog();\r\n\r\nfunction openAddEntityDialog() {\r\n    customDialog.customDialog(htmlTemplate, AddEntityDialogController).subscribe();\r\n}\r\n\r\nfunction AddEntityDialogController(instance) {\r\n    let vm = instance;\r\n    vm.addEntityFormGroup = vm.fb.group({\r\n     oggetto: [null, [vm.validators.required]],\r\n     eventDate:[null, [vm.validators.required]],\r\n     eventTime:[null, [vm.validators.required]],\r\n     durata:[null, [vm.validators.required]],\r\n     user: [null, [vm.validators.required]],\r\n     note: [\"\"]\r\n    });\r\n\r\n    vm.cancel = function() {\r\n        vm.dialogRef.close(null);\r\n    };\r\n    vm.save = function() {\r\n        var formData=vm.addEntityFormGroup.value;\r\n        formData.eventDate.setHours(formData.eventTime.getHours());\r\n        formData.eventDate.setMinutes(formData.eventTime.getMinutes());\r\n        vm.addEntityFormGroup.markAsPristine();\r\n        var telData={\"ts\":formData.eventDate.valueOf(), \"values\":{\"maloreoggetto\":formData.oggetto, \"maloreuser\":formData.user, \"maloredurata\":formData.durata, \"malorenote\":formData.note, \"maloreevento\":segnalazione}};\r\n        widgetContext.http.post('/api/plugins/telemetry/'+entityId.entityType+'/'+entityId.id+'/timeseries/ANY?scope=ANY', telData).subscribe(data =>\r\n        {\r\n        // console.log(\"data: \",data)\r\n            // widgetContext.updateAliases();\r\n            vm.dialogRef.close(null);\r\n        },function(error){\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n}\r\n",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "c4dbda5b-4661-cda0-011a-57143dab10d4"
              } ]
            },
            "enableDataExport" : false,
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : ""
          },
          "row" : 0,
          "col" : 0,
          "id" : "2d05bbf9-0dd2-f4ce-6d17-371fcce84fb5"
        },
        "2ab06957-dc20-5546-b305-d8e6f5c03308" : {
          "isSystemType" : true,
          "bundleAlias" : "cards",
          "typeAlias" : "html_value_card",
          "type" : "latest",
          "title" : "New widget",
          "image" : null,
          "description" : null,
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "09d911fe-e027-2993-9d45-243ac73cff59",
              "filterId" : null,
              "dataKeys" : [ ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY"
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1683549171832,
                  "endTimeMs" : 1683635571832
                },
                "quickInterval" : "CURRENT_DAY"
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div id=\"segnalazione\" class='card'>\n    <h1>Manutenzione</h1>\n    <i class=\"fa fa-life-ring\" aria-hidden=\"true\"></i>\n</div>",
              "cardCss" : "@media (min-width: 1500px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n@media (max-width: 960px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n@media (min-width:960px) and (max-width: 1500px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n.card {\n    font-weight: bold;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n.card:hover{\n    transform: scale(0.9);\n}\nh1{\n    flex-wrap: wrap;\n    font-weight: bold;\n}\n.fa{\n    color:blue;\n}"
            },
            "title" : "New HTML Value Card",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "elementClick" : [ {
                "name" : "segnalazione",
                "icon" : "more_horiz",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<form #addEntityForm=\"ngForm\" [formGroup]=\"addEntityFormGroup\"\r\n      (ngSubmit)=\"save()\" class=\"add-entity-form\">\r\n    <mat-toolbar fxLayout=\"row\" color=\"primary\">\r\n        <h2>Nuova Segnalazione</h2>\r\n        <span fxFlex></span>\r\n        <button mat-icon-button (click)=\"cancel()\" type=\"button\">\r\n            <mat-icon class=\"material-icons\">close</mat-icon>\r\n        </button>\r\n    </mat-toolbar>\r\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\r\n    </mat-progress-bar>\r\n    <div style=\"height: 4px; width: 600px \" *ngIf=\"!(isLoading$ | async)\"></div>\r\n    <div mat-dialog-content fxLayout=\"column\">\r\n        <div fxLayout=\"column\" fxLayoutGap=\"2px\" fxLayout.md=\"column\" fxLayoutGap.md=\"0\">\r\n            <span style=\"font-size:20px;font-weight:bold;text-align:center;\">Manutenzione</span><br>\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Oggetto</mat-label>\r\n                <input matInput formControlName=\"oggetto\" required>\r\n            </mat-form-field>\r\n            <section fxLayout=\"row\" fxLayoutAlign=\"center\" fxLayoutGap=\"10px\" fxLayout.xs=\"column\" fxLayoutGap.xs=\"0\">\r\n                <mat-form-field appearance=\"fill\" style=\"width: 300px\">\r\n                  <mat-label>Data inizio</mat-label>\r\n                  <mat-datetimepicker-toggle [for]=\"DatePicker\" matPrefix></mat-datetimepicker-toggle>\r\n                  <mat-datetimepicker #DatePicker type=\"date\" openOnFocus=\"true\"></mat-datetimepicker>\r\n                  <input matInput [disabled]=\"disabled\"  [matDatetimepicker]=\"DatePicker\" formControlName=\"eventDate\" required>\r\n                  <mat-hint>GG/MM/AAAA</mat-hint>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"fill\"  style=\"width: 300px\">\r\n                  <mat-label>Ora inizio</mat-label>\r\n                  <mat-datetimepicker-toggle [for]=\"TimePicker\" matPrefix></mat-datetimepicker-toggle>\r\n                  <mat-datetimepicker #TimePicker type=\"time\" openOnFocus=\"true\"></mat-datetimepicker>\r\n                  <input matInput [disabled]=\"disabled\" [matDatetimepicker]=\"TimePicker\" formControlName=\"eventTime\" required><mat-hint>H/Min</mat-hint>\r\n                </mat-form-field>\r\n            </section>\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Durata</mat-label>\r\n                <input matInput formControlName=\"durata\" required>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\">\r\n              <mat-label>Note</mat-label>\r\n              <textarea matInput formControlName=\"note\"></textarea>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Registrato dall'utente</mat-label>\r\n                <input matInput formControlName=\"user\" required>\r\n            </mat-form-field>\r\n        </div>\r\n    </div>\r\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\r\n        <button mat-button color=\"primary\"\r\n                type=\"button\"\r\n                [disabled]=\"(isLoading$ | async)\"\r\n                (click)=\"cancel()\" cdkFocusInitial>\r\n            Cancella\r\n        </button>\r\n        <button mat-button mat-raised-button color=\"primary\"\r\n                type=\"submit\"\r\n                [disabled]=\"(isLoading$ | async) || addEntityForm.invalid || !addEntityForm.dirty\">\r\n            Invia\r\n        </button>\r\n    </div>\r\n</form>\r\n",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\r\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\r\n\r\nlet segnalazione = \"Manutenzione\";\r\n    openAddEntityDialog();\r\n\r\nfunction openAddEntityDialog() {\r\n    customDialog.customDialog(htmlTemplate, AddEntityDialogController).subscribe();\r\n}\r\n\r\nfunction AddEntityDialogController(instance) {\r\n    let vm = instance;\r\n    vm.addEntityFormGroup = vm.fb.group({\r\n     oggetto: [null, [vm.validators.required]],\r\n     eventDate:[null, [vm.validators.required]],\r\n     eventTime:[null, [vm.validators.required]],\r\n     durata:[null, [vm.validators.required]],\r\n     user: [null, [vm.validators.required]],\r\n     note: [\"\"]\r\n    });\r\n\r\n    vm.cancel = function() {\r\n        vm.dialogRef.close(null);\r\n    };\r\n    vm.save = function() {\r\n        var formData=vm.addEntityFormGroup.value;\r\n        formData.eventDate.setHours(formData.eventTime.getHours());\r\n        formData.eventDate.setMinutes(formData.eventTime.getMinutes());\r\n        vm.addEntityFormGroup.markAsPristine();\r\n        var telData={\"ts\":formData.eventDate.valueOf(), \"values\":{\"maloreoggetto\":formData.oggetto, \"maloreuser\":formData.user, \"maloredurata\":formData.durata, \"malorenote\":formData.note, \"maloreevento\":segnalazione}};\r\n        widgetContext.http.post('/api/plugins/telemetry/'+entityId.entityType+'/'+entityId.id+'/timeseries/ANY?scope=ANY', telData).subscribe(data =>\r\n        {\r\n        // console.log(\"data: \",data)\r\n            // widgetContext.updateAliases();\r\n            vm.dialogRef.close(null);\r\n        },function(error){\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n}\r\n",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "c4dbda5b-4661-cda0-011a-57143dab10d4"
              } ]
            },
            "enableDataExport" : false,
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : ""
          },
          "row" : 0,
          "col" : 0,
          "id" : "2ab06957-dc20-5546-b305-d8e6f5c03308"
        },
        "bfad4c81-5359-dc2e-ec2f-89ebed0ac563" : {
          "isSystemType" : true,
          "bundleAlias" : "cards",
          "typeAlias" : "html_value_card",
          "type" : "latest",
          "title" : "New widget",
          "image" : null,
          "description" : null,
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "09d911fe-e027-2993-9d45-243ac73cff59",
              "filterId" : null,
              "dataKeys" : [ ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY"
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1683549171832,
                  "endTimeMs" : 1683635571832
                },
                "quickInterval" : "CURRENT_DAY"
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div id=\"segnalazione\" class='card'>\n    <h1>Taratura</h1>\n    <i class=\"fa fa-sliders\" aria-hidden=\"true\"></i>\n</div>",
              "cardCss" : "@media (min-width: 1500px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n@media (max-width: 960px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n@media (min-width:960px) and (max-width: 1500px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n.card {\n    font-weight: bold;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n.card:hover{\n    transform: scale(0.9);\n}\nh1{\n    flex-wrap: wrap;\n    font-weight: bold;\n}\n.fa{\n    color:#ef4444;\n}"
            },
            "title" : "New HTML Value Card",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "elementClick" : [ {
                "name" : "segnalazione",
                "icon" : "more_horiz",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<form #addEntityForm=\"ngForm\" [formGroup]=\"addEntityFormGroup\"\r\n      (ngSubmit)=\"save()\" class=\"add-entity-form\">\r\n    <mat-toolbar fxLayout=\"row\" color=\"primary\">\r\n        <h2>Nuova Segnalazione</h2>\r\n        <span fxFlex></span>\r\n        <button mat-icon-button (click)=\"cancel()\" type=\"button\">\r\n            <mat-icon class=\"material-icons\">close</mat-icon>\r\n        </button>\r\n    </mat-toolbar>\r\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\r\n    </mat-progress-bar>\r\n    <div style=\"height: 4px; width: 600px \" *ngIf=\"!(isLoading$ | async)\"></div>\r\n    <div mat-dialog-content fxLayout=\"column\">\r\n        <div fxLayout=\"column\" fxLayoutGap=\"2px\" fxLayout.md=\"column\" fxLayoutGap.md=\"0\">\r\n            <span style=\"font-size:20px;font-weight:bold;text-align:center;\">Taratura</span><br>\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Oggetto</mat-label>\r\n                <input matInput formControlName=\"oggetto\" required>\r\n            </mat-form-field>\r\n            <section fxLayout=\"row\" fxLayoutAlign=\"center\" fxLayoutGap=\"10px\" fxLayout.xs=\"column\" fxLayoutGap.xs=\"0\">\r\n                <mat-form-field appearance=\"fill\" style=\"width: 300px\">\r\n                  <mat-label>Data inizio</mat-label>\r\n                  <mat-datetimepicker-toggle [for]=\"DatePicker\" matPrefix></mat-datetimepicker-toggle>\r\n                  <mat-datetimepicker #DatePicker type=\"date\" openOnFocus=\"true\"></mat-datetimepicker>\r\n                  <input matInput [disabled]=\"disabled\"  [matDatetimepicker]=\"DatePicker\" formControlName=\"eventDate\" required>\r\n                  <mat-hint>GG/MM/AAAA</mat-hint>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"fill\"  style=\"width: 300px\">\r\n                  <mat-label>Ora inizio</mat-label>\r\n                  <mat-datetimepicker-toggle [for]=\"TimePicker\" matPrefix></mat-datetimepicker-toggle>\r\n                  <mat-datetimepicker #TimePicker type=\"time\" openOnFocus=\"true\"></mat-datetimepicker>\r\n                  <input matInput [disabled]=\"disabled\" [matDatetimepicker]=\"TimePicker\" formControlName=\"eventTime\" required><mat-hint>H/Min</mat-hint>\r\n                </mat-form-field>\r\n            </section>\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Durata</mat-label>\r\n                <input matInput formControlName=\"durata\" required>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\">\r\n              <mat-label>Note</mat-label>\r\n              <textarea matInput formControlName=\"note\"></textarea>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Registrato dall'utente</mat-label>\r\n                <input matInput formControlName=\"user\" required>\r\n            </mat-form-field>\r\n        </div>\r\n    </div>\r\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\r\n        <button mat-button color=\"primary\"\r\n                type=\"button\"\r\n                [disabled]=\"(isLoading$ | async)\"\r\n                (click)=\"cancel()\" cdkFocusInitial>\r\n            Cancella\r\n        </button>\r\n        <button mat-button mat-raised-button color=\"primary\"\r\n                type=\"submit\"\r\n                [disabled]=\"(isLoading$ | async) || addEntityForm.invalid || !addEntityForm.dirty\">\r\n            Invia\r\n        </button>\r\n    </div>\r\n</form>\r\n",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\r\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\r\n\r\nlet segnalazione = \"Taratura\";\r\n    openAddEntityDialog();\r\n\r\nfunction openAddEntityDialog() {\r\n    customDialog.customDialog(htmlTemplate, AddEntityDialogController).subscribe();\r\n}\r\n\r\nfunction AddEntityDialogController(instance) {\r\n    let vm = instance;\r\n    vm.addEntityFormGroup = vm.fb.group({\r\n     oggetto: [null, [vm.validators.required]],\r\n     eventDate:[null, [vm.validators.required]],\r\n     eventTime:[null, [vm.validators.required]],\r\n     durata:[null, [vm.validators.required]],\r\n     user: [null, [vm.validators.required]],\r\n     note: [\"\"]\r\n    });\r\n\r\n    vm.cancel = function() {\r\n        vm.dialogRef.close(null);\r\n    };\r\n    vm.save = function() {\r\n        var formData=vm.addEntityFormGroup.value;\r\n        formData.eventDate.setHours(formData.eventTime.getHours());\r\n        formData.eventDate.setMinutes(formData.eventTime.getMinutes());\r\n        vm.addEntityFormGroup.markAsPristine();\r\n        var telData={\"ts\":formData.eventDate.valueOf(), \"values\":{\"maloreoggetto\":formData.oggetto, \"maloreuser\":formData.user, \"maloredurata\":formData.durata, \"malorenote\":formData.note, \"maloreevento\":segnalazione}};\r\n        widgetContext.http.post('/api/plugins/telemetry/'+entityId.entityType+'/'+entityId.id+'/timeseries/ANY?scope=ANY', telData).subscribe(data =>\r\n        {\r\n        // console.log(\"data: \",data)\r\n            // widgetContext.updateAliases();\r\n            vm.dialogRef.close(null);\r\n        },function(error){\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n}\r\n",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "c4dbda5b-4661-cda0-011a-57143dab10d4"
              } ]
            },
            "enableDataExport" : false,
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : ""
          },
          "row" : 0,
          "col" : 0,
          "id" : "bfad4c81-5359-dc2e-ec2f-89ebed0ac563"
        },
        "903b1f8b-81e9-6f20-27c0-f2f5bf5246b9" : {
          "isSystemType" : true,
          "bundleAlias" : "cards",
          "typeAlias" : "html_value_card",
          "type" : "latest",
          "title" : "New widget",
          "image" : null,
          "description" : null,
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "09d911fe-e027-2993-9d45-243ac73cff59",
              "filterId" : null,
              "dataKeys" : [ ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY"
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1683549171832,
                  "endTimeMs" : 1683635571832
                },
                "quickInterval" : "CURRENT_DAY"
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div id=\"segnalazione\" class='card'>\n    <h1>Installazione Ricambio</h1>\n    <i class=\"fa fa-wrench\" aria-hidden=\"true\"></i>\n</div>",
              "cardCss" : "@media (min-width: 1500px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n@media (max-width: 960px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n@media (min-width:960px) and (max-width: 1500px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n.card {\n    font-weight: bold;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n.card:hover{\n    transform: scale(0.9);\n}\nh1{\n    flex-wrap: wrap;\n    font-weight: bold;\n}\n.fa{\n    color:#0ea5e9;\n}"
            },
            "title" : "New HTML Value Card",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "elementClick" : [ {
                "name" : "segnalazione",
                "icon" : "more_horiz",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<form #addEntityForm=\"ngForm\" [formGroup]=\"addEntityFormGroup\"\r\n      (ngSubmit)=\"save()\" class=\"add-entity-form\">\r\n    <mat-toolbar fxLayout=\"row\" color=\"primary\">\r\n        <h2>Nuova Segnalazione</h2>\r\n        <span fxFlex></span>\r\n        <button mat-icon-button (click)=\"cancel()\" type=\"button\">\r\n            <mat-icon class=\"material-icons\">close</mat-icon>\r\n        </button>\r\n    </mat-toolbar>\r\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\r\n    </mat-progress-bar>\r\n    <div style=\"height: 4px; width: 600px \" *ngIf=\"!(isLoading$ | async)\"></div>\r\n    <div mat-dialog-content fxLayout=\"column\">\r\n        <div fxLayout=\"column\" fxLayoutGap=\"2px\" fxLayout.md=\"column\" fxLayoutGap.md=\"0\">\r\n            <span style=\"font-size:20px;font-weight:bold;text-align:center;\">Installazione Ricambio</span><br>\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Oggetto</mat-label>\r\n                <input matInput formControlName=\"oggetto\" required>\r\n            </mat-form-field>\r\n            <section fxLayout=\"row\" fxLayoutAlign=\"center\" fxLayoutGap=\"10px\" fxLayout.xs=\"column\" fxLayoutGap.xs=\"0\">\r\n                <mat-form-field appearance=\"fill\" style=\"width: 300px\">\r\n                  <mat-label>Data inizio</mat-label>\r\n                  <mat-datetimepicker-toggle [for]=\"DatePicker\" matPrefix></mat-datetimepicker-toggle>\r\n                  <mat-datetimepicker #DatePicker type=\"date\" openOnFocus=\"true\"></mat-datetimepicker>\r\n                  <input matInput [disabled]=\"disabled\"  [matDatetimepicker]=\"DatePicker\" formControlName=\"eventDate\" required>\r\n                  <mat-hint>GG/MM/AAAA</mat-hint>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"fill\"  style=\"width: 300px\">\r\n                  <mat-label>Ora inizio</mat-label>\r\n                  <mat-datetimepicker-toggle [for]=\"TimePicker\" matPrefix></mat-datetimepicker-toggle>\r\n                  <mat-datetimepicker #TimePicker type=\"time\" openOnFocus=\"true\"></mat-datetimepicker>\r\n                  <input matInput [disabled]=\"disabled\" [matDatetimepicker]=\"TimePicker\" formControlName=\"eventTime\" required><mat-hint>H/Min</mat-hint>\r\n                </mat-form-field>\r\n            </section>\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Durata</mat-label>\r\n                <input matInput formControlName=\"durata\" required>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\">\r\n              <mat-label>Note</mat-label>\r\n              <textarea matInput formControlName=\"note\"></textarea>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Registrato dall'utente</mat-label>\r\n                <input matInput formControlName=\"user\" required>\r\n            </mat-form-field>\r\n        </div>\r\n    </div>\r\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\r\n        <button mat-button color=\"primary\"\r\n                type=\"button\"\r\n                [disabled]=\"(isLoading$ | async)\"\r\n                (click)=\"cancel()\" cdkFocusInitial>\r\n            Cancella\r\n        </button>\r\n        <button mat-button mat-raised-button color=\"primary\"\r\n                type=\"submit\"\r\n                [disabled]=\"(isLoading$ | async) || addEntityForm.invalid || !addEntityForm.dirty\">\r\n            Invia\r\n        </button>\r\n    </div>\r\n</form>\r\n",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\r\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\r\n\r\nlet segnalazione = \"Installazione Ricambio\";\r\n    openAddEntityDialog();\r\n\r\nfunction openAddEntityDialog() {\r\n    customDialog.customDialog(htmlTemplate, AddEntityDialogController).subscribe();\r\n}\r\n\r\nfunction AddEntityDialogController(instance) {\r\n    let vm = instance;\r\n    vm.addEntityFormGroup = vm.fb.group({\r\n     oggetto: [null, [vm.validators.required]],\r\n     eventDate:[null, [vm.validators.required]],\r\n     eventTime:[null, [vm.validators.required]],\r\n     durata:[null, [vm.validators.required]],\r\n     user: [null, [vm.validators.required]],\r\n     note: [\"\"]\r\n    });\r\n\r\n    vm.cancel = function() {\r\n        vm.dialogRef.close(null);\r\n    };\r\n    vm.save = function() {\r\n        var formData=vm.addEntityFormGroup.value;\r\n        formData.eventDate.setHours(formData.eventTime.getHours());\r\n        formData.eventDate.setMinutes(formData.eventTime.getMinutes());\r\n        vm.addEntityFormGroup.markAsPristine();\r\n        var telData={\"ts\":formData.eventDate.valueOf(), \"values\":{\"maloreoggetto\":formData.oggetto, \"maloreuser\":formData.user, \"maloredurata\":formData.durata, \"malorenote\":formData.note, \"maloreevento\":segnalazione}};\r\n        widgetContext.http.post('/api/plugins/telemetry/'+entityId.entityType+'/'+entityId.id+'/timeseries/ANY?scope=ANY', telData).subscribe(data =>\r\n        {\r\n        // console.log(\"data: \",data)\r\n            // widgetContext.updateAliases();\r\n            vm.dialogRef.close(null);\r\n        },function(error){\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n}\r\n",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "c4dbda5b-4661-cda0-011a-57143dab10d4"
              } ]
            },
            "enableDataExport" : false,
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : ""
          },
          "row" : 0,
          "col" : 0,
          "id" : "903b1f8b-81e9-6f20-27c0-f2f5bf5246b9"
        },
        "82d439a1-2d86-6a4a-da05-8745dd237a7a" : {
          "isSystemType" : true,
          "bundleAlias" : "cards",
          "typeAlias" : "html_value_card",
          "type" : "latest",
          "title" : "New widget",
          "image" : null,
          "description" : null,
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "09d911fe-e027-2993-9d45-243ac73cff59",
              "filterId" : null,
              "dataKeys" : [ ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY"
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1683549171832,
                  "endTimeMs" : 1683635571832
                },
                "quickInterval" : "CURRENT_DAY"
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div id=\"segnalazione\" class='card'>\n    <h1>Cambio Produzione</h1>\n    <i class=\"fa fa-refresh\" aria-hidden=\"true\"></i>\n</div>",
              "cardCss" : "@media (min-width: 1500px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n@media (max-width: 960px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n@media (min-width:960px) and (max-width: 1500px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n.card {\n    font-weight: bold;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n.card:hover{\n    transform: scale(0.9);\n}\nh1{\n    flex-wrap: wrap;\n    font-weight: bold;\n}\n.fa{\n    color:#a3e635;\n}"
            },
            "title" : "New HTML Value Card",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "elementClick" : [ {
                "name" : "segnalazione",
                "icon" : "more_horiz",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<form #addEntityForm=\"ngForm\" [formGroup]=\"addEntityFormGroup\"\r\n      (ngSubmit)=\"save()\" class=\"add-entity-form\">\r\n    <mat-toolbar fxLayout=\"row\" color=\"primary\">\r\n        <h2>Nuova Segnalazione</h2>\r\n        <span fxFlex></span>\r\n        <button mat-icon-button (click)=\"cancel()\" type=\"button\">\r\n            <mat-icon class=\"material-icons\">close</mat-icon>\r\n        </button>\r\n    </mat-toolbar>\r\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\r\n    </mat-progress-bar>\r\n    <div style=\"height: 4px; width: 600px \" *ngIf=\"!(isLoading$ | async)\"></div>\r\n    <div mat-dialog-content fxLayout=\"column\">\r\n        <div fxLayout=\"column\" fxLayoutGap=\"2px\" fxLayout.md=\"column\" fxLayoutGap.md=\"0\">\r\n            <span style=\"font-size:20px;font-weight:bold;text-align:center;\">Cambio Produzione</span><br>\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Oggetto</mat-label>\r\n                <input matInput formControlName=\"oggetto\" required>\r\n            </mat-form-field>\r\n            <section fxLayout=\"row\" fxLayoutAlign=\"center\" fxLayoutGap=\"10px\" fxLayout.xs=\"column\" fxLayoutGap.xs=\"0\">\r\n                <mat-form-field appearance=\"fill\" style=\"width: 300px\">\r\n                  <mat-label>Data inizio</mat-label>\r\n                  <mat-datetimepicker-toggle [for]=\"DatePicker\" matPrefix></mat-datetimepicker-toggle>\r\n                  <mat-datetimepicker #DatePicker type=\"date\" openOnFocus=\"true\"></mat-datetimepicker>\r\n                  <input matInput [disabled]=\"disabled\"  [matDatetimepicker]=\"DatePicker\" formControlName=\"eventDate\" required>\r\n                  <mat-hint>GG/MM/AAAA</mat-hint>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"fill\"  style=\"width: 300px\">\r\n                  <mat-label>Ora inizio</mat-label>\r\n                  <mat-datetimepicker-toggle [for]=\"TimePicker\" matPrefix></mat-datetimepicker-toggle>\r\n                  <mat-datetimepicker #TimePicker type=\"time\" openOnFocus=\"true\"></mat-datetimepicker>\r\n                  <input matInput [disabled]=\"disabled\" [matDatetimepicker]=\"TimePicker\" formControlName=\"eventTime\" required><mat-hint>H/Min</mat-hint>\r\n                </mat-form-field>\r\n            </section>\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Durata</mat-label>\r\n                <input matInput formControlName=\"durata\" required>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\">\r\n              <mat-label>Note</mat-label>\r\n              <textarea matInput formControlName=\"note\"></textarea>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Registrato dall'utente</mat-label>\r\n                <input matInput formControlName=\"user\" required>\r\n            </mat-form-field>\r\n        </div>\r\n    </div>\r\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\r\n        <button mat-button color=\"primary\"\r\n                type=\"button\"\r\n                [disabled]=\"(isLoading$ | async)\"\r\n                (click)=\"cancel()\" cdkFocusInitial>\r\n            Cancella\r\n        </button>\r\n        <button mat-button mat-raised-button color=\"primary\"\r\n                type=\"submit\"\r\n                [disabled]=\"(isLoading$ | async) || addEntityForm.invalid || !addEntityForm.dirty\">\r\n            Invia\r\n        </button>\r\n    </div>\r\n</form>\r\n",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\r\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\r\n\r\nlet segnalazione = \"Cambio Produzione\";\r\n    openAddEntityDialog();\r\n\r\nfunction openAddEntityDialog() {\r\n    customDialog.customDialog(htmlTemplate, AddEntityDialogController).subscribe();\r\n}\r\n\r\nfunction AddEntityDialogController(instance) {\r\n    let vm = instance;\r\n    vm.addEntityFormGroup = vm.fb.group({\r\n     oggetto: [null, [vm.validators.required]],\r\n     eventDate:[null, [vm.validators.required]],\r\n     eventTime:[null, [vm.validators.required]],\r\n     durata:[null, [vm.validators.required]],\r\n     user: [null, [vm.validators.required]],\r\n     note: [\"\"]\r\n    });\r\n\r\n    vm.cancel = function() {\r\n        vm.dialogRef.close(null);\r\n    };\r\n    vm.save = function() {\r\n        var formData=vm.addEntityFormGroup.value;\r\n        formData.eventDate.setHours(formData.eventTime.getHours());\r\n        formData.eventDate.setMinutes(formData.eventTime.getMinutes());\r\n        vm.addEntityFormGroup.markAsPristine();\r\n        var telData={\"ts\":formData.eventDate.valueOf(), \"values\":{\"maloreoggetto\":formData.oggetto, \"maloreuser\":formData.user, \"maloredurata\":formData.durata, \"malorenote\":formData.note, \"maloreevento\":segnalazione}};\r\n        widgetContext.http.post('/api/plugins/telemetry/'+entityId.entityType+'/'+entityId.id+'/timeseries/ANY?scope=ANY', telData).subscribe(data =>\r\n        {\r\n        // console.log(\"data: \",data)\r\n            // widgetContext.updateAliases();\r\n            vm.dialogRef.close(null);\r\n        },function(error){\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n}\r\n",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "c4dbda5b-4661-cda0-011a-57143dab10d4"
              } ]
            },
            "enableDataExport" : false,
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : ""
          },
          "row" : 0,
          "col" : 0,
          "id" : "82d439a1-2d86-6a4a-da05-8745dd237a7a"
        },
        "31b98465-9d5f-9893-8fc8-c4880e388df1" : {
          "isSystemType" : true,
          "bundleAlias" : "cards",
          "typeAlias" : "html_value_card",
          "type" : "latest",
          "title" : "New widget",
          "image" : null,
          "description" : null,
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "09d911fe-e027-2993-9d45-243ac73cff59",
              "filterId" : null,
              "dataKeys" : [ ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY"
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1683549171832,
                  "endTimeMs" : 1683635571832
                },
                "quickInterval" : "CURRENT_DAY"
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div id=\"segnalazione\" class='card'>\n    <h1>Setup Macchina</h1>\n    <i class=\"fa fa-history\" aria-hidden=\"true\"></i>\n</div>",
              "cardCss" : "@media (min-width: 1500px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n@media (max-width: 960px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n@media (min-width:960px) and (max-width: 1500px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n.card {\n    font-weight: bold;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n.card:hover{\n    transform: scale(0.9);\n}\nh1{\n    flex-wrap: wrap;\n    font-weight: bold;\n}\n.fa{\n    color:#fde047;\n}"
            },
            "title" : "New HTML Value Card",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "elementClick" : [ {
                "name" : "segnalazione",
                "icon" : "more_horiz",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<form #addEntityForm=\"ngForm\" [formGroup]=\"addEntityFormGroup\"\r\n      (ngSubmit)=\"save()\" class=\"add-entity-form\">\r\n    <mat-toolbar fxLayout=\"row\" color=\"primary\">\r\n        <h2>Nuova Segnalazione</h2>\r\n        <span fxFlex></span>\r\n        <button mat-icon-button (click)=\"cancel()\" type=\"button\">\r\n            <mat-icon class=\"material-icons\">close</mat-icon>\r\n        </button>\r\n    </mat-toolbar>\r\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\r\n    </mat-progress-bar>\r\n    <div style=\"height: 4px; width: 600px \" *ngIf=\"!(isLoading$ | async)\"></div>\r\n    <div mat-dialog-content fxLayout=\"column\">\r\n        <div fxLayout=\"column\" fxLayoutGap=\"2px\" fxLayout.md=\"column\" fxLayoutGap.md=\"0\">\r\n            <span style=\"font-size:20px;font-weight:bold;text-align:center;\">Setup Macchina</span><br>\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Oggetto</mat-label>\r\n                <input matInput formControlName=\"oggetto\" required>\r\n            </mat-form-field>\r\n            <section fxLayout=\"row\" fxLayoutAlign=\"center\" fxLayoutGap=\"10px\" fxLayout.xs=\"column\" fxLayoutGap.xs=\"0\">\r\n                <mat-form-field appearance=\"fill\" style=\"width: 300px\">\r\n                  <mat-label>Data inizio</mat-label>\r\n                  <mat-datetimepicker-toggle [for]=\"DatePicker\" matPrefix></mat-datetimepicker-toggle>\r\n                  <mat-datetimepicker #DatePicker type=\"date\" openOnFocus=\"true\"></mat-datetimepicker>\r\n                  <input matInput [disabled]=\"disabled\"  [matDatetimepicker]=\"DatePicker\" formControlName=\"eventDate\" required>\r\n                  <mat-hint>GG/MM/AAAA</mat-hint>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"fill\"  style=\"width: 300px\">\r\n                  <mat-label>Ora inizio</mat-label>\r\n                  <mat-datetimepicker-toggle [for]=\"TimePicker\" matPrefix></mat-datetimepicker-toggle>\r\n                  <mat-datetimepicker #TimePicker type=\"time\" openOnFocus=\"true\"></mat-datetimepicker>\r\n                  <input matInput [disabled]=\"disabled\" [matDatetimepicker]=\"TimePicker\" formControlName=\"eventTime\" required><mat-hint>H/Min</mat-hint>\r\n                </mat-form-field>\r\n            </section>\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Durata</mat-label>\r\n                <input matInput formControlName=\"durata\" required>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\">\r\n              <mat-label>Note</mat-label>\r\n              <textarea matInput formControlName=\"note\"></textarea>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Registrato dall'utente</mat-label>\r\n                <input matInput formControlName=\"user\" required>\r\n            </mat-form-field>\r\n        </div>\r\n    </div>\r\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\r\n        <button mat-button color=\"primary\"\r\n                type=\"button\"\r\n                [disabled]=\"(isLoading$ | async)\"\r\n                (click)=\"cancel()\" cdkFocusInitial>\r\n            Cancella\r\n        </button>\r\n        <button mat-button mat-raised-button color=\"primary\"\r\n                type=\"submit\"\r\n                [disabled]=\"(isLoading$ | async) || addEntityForm.invalid || !addEntityForm.dirty\">\r\n            Invia\r\n        </button>\r\n    </div>\r\n</form>\r\n",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\r\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\r\n\r\nlet segnalazione = \"Setup Macchina\";\r\n    openAddEntityDialog();\r\n\r\nfunction openAddEntityDialog() {\r\n    customDialog.customDialog(htmlTemplate, AddEntityDialogController).subscribe();\r\n}\r\n\r\nfunction AddEntityDialogController(instance) {\r\n    let vm = instance;\r\n    vm.addEntityFormGroup = vm.fb.group({\r\n     oggetto: [null, [vm.validators.required]],\r\n     eventDate:[null, [vm.validators.required]],\r\n     eventTime:[null, [vm.validators.required]],\r\n     durata:[null, [vm.validators.required]],\r\n     user: [null, [vm.validators.required]],\r\n     note: [\"\"]\r\n    });\r\n\r\n    vm.cancel = function() {\r\n        vm.dialogRef.close(null);\r\n    };\r\n    vm.save = function() {\r\n        var formData=vm.addEntityFormGroup.value;\r\n        formData.eventDate.setHours(formData.eventTime.getHours());\r\n        formData.eventDate.setMinutes(formData.eventTime.getMinutes());\r\n        vm.addEntityFormGroup.markAsPristine();\r\n        var telData={\"ts\":formData.eventDate.valueOf(), \"values\":{\"maloreoggetto\":formData.oggetto, \"maloreuser\":formData.user, \"maloredurata\":formData.durata, \"malorenote\":formData.note, \"maloreevento\":segnalazione}};\r\n        widgetContext.http.post('/api/plugins/telemetry/'+entityId.entityType+'/'+entityId.id+'/timeseries/ANY?scope=ANY', telData).subscribe(data =>\r\n        {\r\n        // console.log(\"data: \",data)\r\n            // widgetContext.updateAliases();\r\n            vm.dialogRef.close(null);\r\n        },function(error){\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n}\r\n",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "c4dbda5b-4661-cda0-011a-57143dab10d4"
              } ]
            },
            "enableDataExport" : false,
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : ""
          },
          "row" : 0,
          "col" : 0,
          "id" : "31b98465-9d5f-9893-8fc8-c4880e388df1"
        },
        "d9d19552-795e-b804-b490-ccbb4dffd0d9" : {
          "isSystemType" : true,
          "bundleAlias" : "cards",
          "typeAlias" : "html_value_card",
          "type" : "latest",
          "title" : "New widget",
          "image" : null,
          "description" : null,
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "09d911fe-e027-2993-9d45-243ac73cff59",
              "filterId" : null,
              "dataKeys" : [ ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY"
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1683549171832,
                  "endTimeMs" : 1683635571832
                },
                "quickInterval" : "CURRENT_DAY"
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div id=\"segnalazione\" class='card'>\n    <h1>Mancanza Energia</h1>\n    <i class=\"fa fa-battery-empty\" aria-hidden=\"true\"></i>\n</div>",
              "cardCss" : "@media (min-width: 1500px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n@media (max-width: 960px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n@media (min-width:960px) and (max-width: 1500px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n.card {\n    font-weight: bold;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n.card:hover{\n    transform: scale(0.9);\n}\nh1{\n    flex-wrap: wrap;\n    font-weight: bold;\n}\n.fa{\n    color:#86efac;\n}"
            },
            "title" : "New HTML Value Card",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "elementClick" : [ {
                "name" : "segnalazione",
                "icon" : "more_horiz",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<form #addEntityForm=\"ngForm\" [formGroup]=\"addEntityFormGroup\"\r\n      (ngSubmit)=\"save()\" class=\"add-entity-form\">\r\n    <mat-toolbar fxLayout=\"row\" color=\"primary\">\r\n        <h2>Nuova Segnalazione</h2>\r\n        <span fxFlex></span>\r\n        <button mat-icon-button (click)=\"cancel()\" type=\"button\">\r\n            <mat-icon class=\"material-icons\">close</mat-icon>\r\n        </button>\r\n    </mat-toolbar>\r\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\r\n    </mat-progress-bar>\r\n    <div style=\"height: 4px; width: 600px \" *ngIf=\"!(isLoading$ | async)\"></div>\r\n    <div mat-dialog-content fxLayout=\"column\">\r\n        <div fxLayout=\"column\" fxLayoutGap=\"2px\" fxLayout.md=\"column\" fxLayoutGap.md=\"0\">\r\n            <span style=\"font-size:20px;font-weight:bold;text-align:center;\">Mancanza Energia</span><br>\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Oggetto</mat-label>\r\n                <input matInput formControlName=\"oggetto\" required>\r\n            </mat-form-field>\r\n            <section fxLayout=\"row\" fxLayoutAlign=\"center\" fxLayoutGap=\"10px\" fxLayout.xs=\"column\" fxLayoutGap.xs=\"0\">\r\n                <mat-form-field appearance=\"fill\" style=\"width: 300px\">\r\n                  <mat-label>Data inizio</mat-label>\r\n                  <mat-datetimepicker-toggle [for]=\"DatePicker\" matPrefix></mat-datetimepicker-toggle>\r\n                  <mat-datetimepicker #DatePicker type=\"date\" openOnFocus=\"true\"></mat-datetimepicker>\r\n                  <input matInput [disabled]=\"disabled\"  [matDatetimepicker]=\"DatePicker\" formControlName=\"eventDate\" required>\r\n                  <mat-hint>GG/MM/AAAA</mat-hint>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"fill\"  style=\"width: 300px\">\r\n                  <mat-label>Ora inizio</mat-label>\r\n                  <mat-datetimepicker-toggle [for]=\"TimePicker\" matPrefix></mat-datetimepicker-toggle>\r\n                  <mat-datetimepicker #TimePicker type=\"time\" openOnFocus=\"true\"></mat-datetimepicker>\r\n                  <input matInput [disabled]=\"disabled\" [matDatetimepicker]=\"TimePicker\" formControlName=\"eventTime\" required><mat-hint>H/Min</mat-hint>\r\n                </mat-form-field>\r\n            </section>\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Durata</mat-label>\r\n                <input matInput formControlName=\"durata\" required>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\">\r\n              <mat-label>Note</mat-label>\r\n              <textarea matInput formControlName=\"note\"></textarea>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Registrato dall'utente</mat-label>\r\n                <input matInput formControlName=\"user\" required>\r\n            </mat-form-field>\r\n        </div>\r\n    </div>\r\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\r\n        <button mat-button color=\"primary\"\r\n                type=\"button\"\r\n                [disabled]=\"(isLoading$ | async)\"\r\n                (click)=\"cancel()\" cdkFocusInitial>\r\n            Cancella\r\n        </button>\r\n        <button mat-button mat-raised-button color=\"primary\"\r\n                type=\"submit\"\r\n                [disabled]=\"(isLoading$ | async) || addEntityForm.invalid || !addEntityForm.dirty\">\r\n            Invia\r\n        </button>\r\n    </div>\r\n</form>\r\n",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\r\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\r\n\r\nlet segnalazione = \"Mancanza Energia\";\r\n    openAddEntityDialog();\r\n\r\nfunction openAddEntityDialog() {\r\n    customDialog.customDialog(htmlTemplate, AddEntityDialogController).subscribe();\r\n}\r\n\r\nfunction AddEntityDialogController(instance) {\r\n    let vm = instance;\r\n    vm.addEntityFormGroup = vm.fb.group({\r\n     oggetto: [null, [vm.validators.required]],\r\n     eventDate:[null, [vm.validators.required]],\r\n     eventTime:[null, [vm.validators.required]],\r\n     durata:[null, [vm.validators.required]],\r\n     user: [null, [vm.validators.required]],\r\n     note: [\"\"]\r\n    });\r\n\r\n    vm.cancel = function() {\r\n        vm.dialogRef.close(null);\r\n    };\r\n    vm.save = function() {\r\n        var formData=vm.addEntityFormGroup.value;\r\n        formData.eventDate.setHours(formData.eventTime.getHours());\r\n        formData.eventDate.setMinutes(formData.eventTime.getMinutes());\r\n        vm.addEntityFormGroup.markAsPristine();\r\n        var telData={\"ts\":formData.eventDate.valueOf(), \"values\":{\"maloreoggetto\":formData.oggetto, \"maloreuser\":formData.user, \"maloredurata\":formData.durata, \"malorenote\":formData.note, \"maloreevento\":segnalazione}};\r\n        widgetContext.http.post('/api/plugins/telemetry/'+entityId.entityType+'/'+entityId.id+'/timeseries/ANY?scope=ANY', telData).subscribe(data =>\r\n        {\r\n        // console.log(\"data: \",data)\r\n            // widgetContext.updateAliases();\r\n            vm.dialogRef.close(null);\r\n        },function(error){\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n}\r\n",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "c4dbda5b-4661-cda0-011a-57143dab10d4"
              } ]
            },
            "enableDataExport" : false,
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : ""
          },
          "row" : 0,
          "col" : 0,
          "id" : "d9d19552-795e-b804-b490-ccbb4dffd0d9"
        },
        "10040814-4aec-c659-e4b6-ac790d49c8ad" : {
          "isSystemType" : true,
          "bundleAlias" : "cards",
          "typeAlias" : "html_value_card",
          "type" : "latest",
          "title" : "New widget",
          "image" : null,
          "description" : null,
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "09d911fe-e027-2993-9d45-243ac73cff59",
              "filterId" : null,
              "dataKeys" : [ ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY"
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1683549171832,
                  "endTimeMs" : 1683635571832
                },
                "quickInterval" : "CURRENT_DAY"
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div id=\"segnalazione\" class='card'>\n    <h1>Incidente Personale</h1>\n    <i class=\"fa fa-medkit\" aria-hidden=\"true\"></i>\n</div>",
              "cardCss" : "@media (min-width: 1500px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n@media (max-width: 960px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n@media (min-width:960px) and (max-width: 1500px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n.card {\n    font-weight: bold;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n.card:hover{\n    transform: scale(0.9);\n}\nh1{\n    flex-wrap: wrap;\n    font-weight: bold;\n}\n.fa{\n    color:red;\n}"
            },
            "title" : "New HTML Value Card",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "elementClick" : [ {
                "name" : "segnalazione",
                "icon" : "more_horiz",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<form #addEntityForm=\"ngForm\" [formGroup]=\"addEntityFormGroup\"\r\n      (ngSubmit)=\"save()\" class=\"add-entity-form\">\r\n    <mat-toolbar fxLayout=\"row\" color=\"primary\">\r\n        <h2>Nuova Segnalazione</h2>\r\n        <span fxFlex></span>\r\n        <button mat-icon-button (click)=\"cancel()\" type=\"button\">\r\n            <mat-icon class=\"material-icons\">close</mat-icon>\r\n        </button>\r\n    </mat-toolbar>\r\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\r\n    </mat-progress-bar>\r\n    <div style=\"height: 4px; width: 600px \" *ngIf=\"!(isLoading$ | async)\"></div>\r\n    <div mat-dialog-content fxLayout=\"column\">\r\n        <div fxLayout=\"column\" fxLayoutGap=\"2px\" fxLayout.md=\"column\" fxLayoutGap.md=\"0\">\r\n            <span style=\"font-size:20px;font-weight:bold;text-align:center;\">Incidente Personale</span><br>\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Oggetto</mat-label>\r\n                <input matInput formControlName=\"oggetto\" required>\r\n            </mat-form-field>\r\n            <section fxLayout=\"row\" fxLayoutAlign=\"center\" fxLayoutGap=\"10px\" fxLayout.xs=\"column\" fxLayoutGap.xs=\"0\">\r\n                <mat-form-field appearance=\"fill\" style=\"width: 300px\">\r\n                  <mat-label>Data inizio</mat-label>\r\n                  <mat-datetimepicker-toggle [for]=\"DatePicker\" matPrefix></mat-datetimepicker-toggle>\r\n                  <mat-datetimepicker #DatePicker type=\"date\" openOnFocus=\"true\"></mat-datetimepicker>\r\n                  <input matInput [disabled]=\"disabled\"  [matDatetimepicker]=\"DatePicker\" formControlName=\"eventDate\" required>\r\n                  <mat-hint>GG/MM/AAAA</mat-hint>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"fill\"  style=\"width: 300px\">\r\n                  <mat-label>Ora inizio</mat-label>\r\n                  <mat-datetimepicker-toggle [for]=\"TimePicker\" matPrefix></mat-datetimepicker-toggle>\r\n                  <mat-datetimepicker #TimePicker type=\"time\" openOnFocus=\"true\"></mat-datetimepicker>\r\n                  <input matInput [disabled]=\"disabled\" [matDatetimepicker]=\"TimePicker\" formControlName=\"eventTime\" required><mat-hint>H/Min</mat-hint>\r\n                </mat-form-field>\r\n            </section>\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Durata</mat-label>\r\n                <input matInput formControlName=\"durata\" required>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\">\r\n              <mat-label>Note</mat-label>\r\n              <textarea matInput formControlName=\"note\"></textarea>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Registrato dall'utente</mat-label>\r\n                <input matInput formControlName=\"user\" required>\r\n            </mat-form-field>\r\n        </div>\r\n    </div>\r\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\r\n        <button mat-button color=\"primary\"\r\n                type=\"button\"\r\n                [disabled]=\"(isLoading$ | async)\"\r\n                (click)=\"cancel()\" cdkFocusInitial>\r\n            Cancella\r\n        </button>\r\n        <button mat-button mat-raised-button color=\"primary\"\r\n                type=\"submit\"\r\n                [disabled]=\"(isLoading$ | async) || addEntityForm.invalid || !addEntityForm.dirty\">\r\n            Invia\r\n        </button>\r\n    </div>\r\n</form>\r\n",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\r\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\r\n\r\nlet segnalazione = \"Incidente Personale\";\r\n    openAddEntityDialog();\r\n\r\nfunction openAddEntityDialog() {\r\n    customDialog.customDialog(htmlTemplate, AddEntityDialogController).subscribe();\r\n}\r\n\r\nfunction AddEntityDialogController(instance) {\r\n    let vm = instance;\r\n    vm.addEntityFormGroup = vm.fb.group({\r\n     oggetto: [null, [vm.validators.required]],\r\n     eventDate:[null, [vm.validators.required]],\r\n     eventTime:[null, [vm.validators.required]],\r\n     durata:[null, [vm.validators.required]],\r\n     user: [null, [vm.validators.required]],\r\n     note: [\"\"]\r\n    });\r\n\r\n    vm.cancel = function() {\r\n        vm.dialogRef.close(null);\r\n    };\r\n    vm.save = function() {\r\n        var formData=vm.addEntityFormGroup.value;\r\n        formData.eventDate.setHours(formData.eventTime.getHours());\r\n        formData.eventDate.setMinutes(formData.eventTime.getMinutes());\r\n        vm.addEntityFormGroup.markAsPristine();\r\n        var telData={\"ts\":formData.eventDate.valueOf(), \"values\":{\"maloreoggetto\":formData.oggetto, \"maloreuser\":formData.user, \"maloredurata\":formData.durata, \"malorenote\":formData.note, \"maloreevento\":segnalazione}};\r\n        widgetContext.http.post('/api/plugins/telemetry/'+entityId.entityType+'/'+entityId.id+'/timeseries/ANY?scope=ANY', telData).subscribe(data =>\r\n        {\r\n        // console.log(\"data: \",data)\r\n            // widgetContext.updateAliases();\r\n            vm.dialogRef.close(null);\r\n        },function(error){\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n}\r\n",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "c4dbda5b-4661-cda0-011a-57143dab10d4"
              } ]
            },
            "enableDataExport" : false,
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : ""
          },
          "row" : 0,
          "col" : 0,
          "id" : "10040814-4aec-c659-e4b6-ac790d49c8ad"
        },
        "70116cf0-9ac3-69ec-de55-9dd349970ab3" : {
          "isSystemType" : true,
          "bundleAlias" : "cards",
          "typeAlias" : "html_value_card",
          "type" : "latest",
          "title" : "New widget",
          "image" : null,
          "description" : null,
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "09d911fe-e027-2993-9d45-243ac73cff59",
              "filterId" : null,
              "dataKeys" : [ ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY"
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1683549171832,
                  "endTimeMs" : 1683635571832
                },
                "quickInterval" : "CURRENT_DAY"
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div id=\"segnalazione\" class='card'>\n    <h1>Maltempo</h1>\n    <i class=\"fa fa-snowflake-o\" aria-hidden=\"true\"></i>\n</div>",
              "cardCss" : "@media (min-width: 1500px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n@media (max-width: 960px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n@media (min-width:960px) and (max-width: 1500px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n.card {\n    font-weight: bold;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n.card:hover{\n    transform: scale(0.9);\n}\nh1{\n    flex-wrap: wrap;\n    font-weight: bold;\n}\n.fa{\n    color:#a5f3fc;\n}"
            },
            "title" : "New HTML Value Card",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "elementClick" : [ {
                "name" : "segnalazione",
                "icon" : "more_horiz",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<form #addEntityForm=\"ngForm\" [formGroup]=\"addEntityFormGroup\"\n      (ngSubmit)=\"save()\" class=\"add-entity-form\">\n    <mat-toolbar fxLayout=\"row\" color=\"primary\">\n        <h2>Nuova Segnalazione</h2>\n        <span fxFlex></span>\n        <button mat-icon-button (click)=\"cancel()\" type=\"button\">\n            <mat-icon class=\"material-icons\">close</mat-icon>\n        </button>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px; width: 600px \" *ngIf=\"!(isLoading$ | async)\"></div>\n    <div mat-dialog-content fxLayout=\"column\">\n        <div fxLayout=\"column\" fxLayoutGap=\"2px\" fxLayout.md=\"column\" fxLayoutGap.md=\"0\">\n            <span style=\"font-size:20px;font-weight:bold;text-align:center;\">Maltempo</span><br>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Oggetto</mat-label>\n                <input matInput formControlName=\"oggetto\" required>\n            </mat-form-field>\n            <section fxLayout=\"row\" fxLayoutAlign=\"center\" fxLayoutGap=\"10px\" fxLayout.xs=\"column\" fxLayoutGap.xs=\"0\">\n                <mat-form-field appearance=\"fill\" style=\"width: 300px\">\n                  <mat-label>Data inizio</mat-label>\n                  <mat-datetimepicker-toggle [for]=\"DatePicker\" matPrefix></mat-datetimepicker-toggle>\n                  <mat-datetimepicker #DatePicker type=\"date\" openOnFocus=\"true\"></mat-datetimepicker>\n                  <input matInput [disabled]=\"disabled\"  [matDatetimepicker]=\"DatePicker\" formControlName=\"eventDate\" required>\n                  <mat-hint>GG/MM/AAAA</mat-hint>\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\"  style=\"width: 300px\">\n                  <mat-label>Ora inizio</mat-label>\n                  <mat-datetimepicker-toggle [for]=\"TimePicker\" matPrefix></mat-datetimepicker-toggle>\n                  <mat-datetimepicker #TimePicker type=\"time\" openOnFocus=\"true\"></mat-datetimepicker>\n                  <input matInput [disabled]=\"disabled\" [matDatetimepicker]=\"TimePicker\" formControlName=\"eventTime\" required><mat-hint>H/Min</mat-hint>\n                </mat-form-field>\n            </section>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Durata</mat-label>\n                <input matInput formControlName=\"durata\" required>\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Note</mat-label>\n              <textarea matInput formControlName=\"note\"></textarea>\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Registrato dall'utente</mat-label>\n                <input matInput formControlName=\"user\" required>\n            </mat-form-field>\n        </div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\n        <button mat-button color=\"primary\"\n                type=\"button\"\n                [disabled]=\"(isLoading$ | async)\"\n                (click)=\"cancel()\" cdkFocusInitial>\n            Cancella\n        </button>\n        <button mat-button mat-raised-button color=\"primary\"\n                type=\"submit\"\n                [disabled]=\"(isLoading$ | async) || addEntityForm.invalid || !addEntityForm.dirty\">\n            Invia\n        </button>\n    </div>\n</form>\n",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nlet segnalazione = \"Maltempo\";\n    openAddEntityDialog();\n\nfunction openAddEntityDialog() {\n    customDialog.customDialog(htmlTemplate, AddEntityDialogController).subscribe();\n}\n\nfunction AddEntityDialogController(instance) {\n    let vm = instance;\n    vm.addEntityFormGroup = vm.fb.group({\n     oggetto: [null, [vm.validators.required]],\n     eventDate:[null, [vm.validators.required]],\n     eventTime:[null, [vm.validators.required]],\n     durata:[null, [vm.validators.required]],\n     user: [null, [vm.validators.required]],\n     note: [\"\"]\n    });\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n    vm.save = function() {\n        var formData=vm.addEntityFormGroup.value;\n        formData.eventDate.setHours(formData.eventTime.getHours());\n        formData.eventDate.setMinutes(formData.eventTime.getMinutes());\n        vm.addEntityFormGroup.markAsPristine();\n        var telData={\"ts\":formData.eventDate.valueOf(), \"values\":{\"maloreoggetto\":formData.oggetto, \"maloreuser\":formData.user, \"maloredurata\":formData.durata, \"malorenote\":formData.note, \"maloreevento\":segnalazione}};\n        widgetContext.http.post('/api/plugins/telemetry/'+entityId.entityType+'/'+entityId.id+'/timeseries/ANY?scope=ANY', telData).subscribe(data =>\n        {\n        // console.log(\"data: \",data)\n            // widgetContext.updateAliases();\n            vm.dialogRef.close(null);\n        },function(error){\n            console.log(error);\n        });\n    };\n\n}\n",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "b1cb8f72-0cc1-654a-dc07-80ab5ffa429b"
              } ]
            },
            "enableDataExport" : false,
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : ""
          },
          "row" : 0,
          "col" : 0,
          "id" : "70116cf0-9ac3-69ec-de55-9dd349970ab3"
        },
        "13b953cc-d0dc-7bdc-ae42-8c8f7ffaa009" : {
          "isSystemType" : true,
          "bundleAlias" : "cards",
          "typeAlias" : "html_value_card",
          "type" : "latest",
          "title" : "New widget",
          "image" : null,
          "description" : null,
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "09d911fe-e027-2993-9d45-243ac73cff59",
              "filterId" : null,
              "dataKeys" : [ ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY"
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1683549171832,
                  "endTimeMs" : 1683635571832
                },
                "quickInterval" : "CURRENT_DAY"
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div id=\"segnalazione\" class='card'>\n    <h1>Incendio</h1>\n    <i class=\"fa fa-fire\" aria-hidden=\"true\"></i>\n</div>",
              "cardCss" : "@media (min-width: 1500px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n@media (max-width: 960px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n@media (min-width:960px) and (max-width: 1500px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n.card {\n    font-weight: bold;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n.card:hover{\n    transform: scale(0.9);\n}\nh1{\n    flex-wrap: wrap;\n    font-weight: bold;\n}\n.fa{\n    color:#ea580c;\n}"
            },
            "title" : "New HTML Value Card",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "elementClick" : [ {
                "name" : "segnalazione",
                "icon" : "more_horiz",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<form #addEntityForm=\"ngForm\" [formGroup]=\"addEntityFormGroup\"\n      (ngSubmit)=\"save()\" class=\"add-entity-form\">\n    <mat-toolbar fxLayout=\"row\" color=\"primary\">\n        <h2>Nuova Segnalazione</h2>\n        <span fxFlex></span>\n        <button mat-icon-button (click)=\"cancel()\" type=\"button\">\n            <mat-icon class=\"material-icons\">close</mat-icon>\n        </button>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px; width: 600px \" *ngIf=\"!(isLoading$ | async)\"></div>\n    <div mat-dialog-content fxLayout=\"column\">\n        <div fxLayout=\"column\" fxLayoutGap=\"2px\" fxLayout.md=\"column\" fxLayoutGap.md=\"0\">\n            <span style=\"font-size:20px;font-weight:bold;text-align:center;\">Incendio</span><br>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Oggetto</mat-label>\n                <input matInput formControlName=\"oggetto\" required>\n            </mat-form-field>\n            <section fxLayout=\"row\" fxLayoutAlign=\"center\" fxLayoutGap=\"10px\" fxLayout.xs=\"column\" fxLayoutGap.xs=\"0\">\n                <mat-form-field appearance=\"fill\" style=\"width: 300px\">\n                  <mat-label>Data inizio</mat-label>\n                  <mat-datetimepicker-toggle [for]=\"DatePicker\" matPrefix></mat-datetimepicker-toggle>\n                  <mat-datetimepicker #DatePicker type=\"date\" openOnFocus=\"true\"></mat-datetimepicker>\n                  <input matInput [disabled]=\"disabled\"  [matDatetimepicker]=\"DatePicker\" formControlName=\"eventDate\" required>\n                  <mat-hint>GG/MM/AAAA</mat-hint>\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\"  style=\"width: 300px\">\n                  <mat-label>Ora inizio</mat-label>\n                  <mat-datetimepicker-toggle [for]=\"TimePicker\" matPrefix></mat-datetimepicker-toggle>\n                  <mat-datetimepicker #TimePicker type=\"time\" openOnFocus=\"true\"></mat-datetimepicker>\n                  <input matInput [disabled]=\"disabled\" [matDatetimepicker]=\"TimePicker\" formControlName=\"eventTime\" required><mat-hint>H/Min</mat-hint>\n                </mat-form-field>\n            </section>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Durata</mat-label>\n                <input matInput formControlName=\"durata\" required>\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Note</mat-label>\n              <textarea matInput formControlName=\"note\"></textarea>\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Registrato dall'utente</mat-label>\n                <input matInput formControlName=\"user\" required>\n            </mat-form-field>\n        </div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\n        <button mat-button color=\"primary\"\n                type=\"button\"\n                [disabled]=\"(isLoading$ | async)\"\n                (click)=\"cancel()\" cdkFocusInitial>\n            Cancella\n        </button>\n        <button mat-button mat-raised-button color=\"primary\"\n                type=\"submit\"\n                [disabled]=\"(isLoading$ | async) || addEntityForm.invalid || !addEntityForm.dirty\">\n            Invia\n        </button>\n    </div>\n</form>\n",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nlet segnalazione = \"Incendio\";\n    openAddEntityDialog();\n\nfunction openAddEntityDialog() {\n    customDialog.customDialog(htmlTemplate, AddEntityDialogController).subscribe();\n}\n\nfunction AddEntityDialogController(instance) {\n    let vm = instance;\n    vm.addEntityFormGroup = vm.fb.group({\n     oggetto: [null, [vm.validators.required]],\n     eventDate:[null, [vm.validators.required]],\n     eventTime:[null, [vm.validators.required]],\n     durata:[null, [vm.validators.required]],\n     user: [null, [vm.validators.required]],\n     note: [\"\"]\n    });\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n    vm.save = function() {\n        var formData=vm.addEntityFormGroup.value;\n        formData.eventDate.setHours(formData.eventTime.getHours());\n        formData.eventDate.setMinutes(formData.eventTime.getMinutes());\n        vm.addEntityFormGroup.markAsPristine();\n        var telData={\"ts\":formData.eventDate.valueOf(), \"values\":{\"maloreoggetto\":formData.oggetto, \"maloreuser\":formData.user, \"maloredurata\":formData.durata, \"malorenote\":formData.note, \"maloreevento\":segnalazione}};\n        widgetContext.http.post('/api/plugins/telemetry/'+entityId.entityType+'/'+entityId.id+'/timeseries/ANY?scope=ANY', telData).subscribe(data =>\n        {\n        // console.log(\"data: \",data)\n            // widgetContext.updateAliases();\n            vm.dialogRef.close(null);\n        },function(error){\n            console.log(error);\n        });\n    };\n\n}\n",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "b1cb8f72-0cc1-654a-dc07-80ab5ffa429b"
              } ]
            },
            "enableDataExport" : false,
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : ""
          },
          "row" : 0,
          "col" : 0,
          "id" : "13b953cc-d0dc-7bdc-ae42-8c8f7ffaa009"
        },
        "c0e79452-3b04-a1ed-5437-ee5cfcff1c19" : {
          "isSystemType" : true,
          "bundleAlias" : "cards",
          "typeAlias" : "html_value_card",
          "type" : "latest",
          "title" : "New widget",
          "image" : null,
          "description" : null,
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "09d911fe-e027-2993-9d45-243ac73cff59",
              "filterId" : null,
              "dataKeys" : [ ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY"
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1683549171832,
                  "endTimeMs" : 1683635571832
                },
                "quickInterval" : "CURRENT_DAY"
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div id=\"segnalazione\" class='card'>\n    <h1>Macchina non disponibile</h1>\n    <i class=\"fa fa-ban\" aria-hidden=\"true\"></i>\n</div>",
              "cardCss" : "@media (min-width: 1500px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n@media (max-width: 960px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n@media (min-width:960px) and (max-width: 1500px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 20px;\n    }\n}\n.card {\n    font-weight: bold;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n.card:hover{\n    transform: scale(0.9);\n}\nh1{\n    flex-wrap: wrap;\n    font-weight: bold;\n}\n.fa{\n    color:red;\n}"
            },
            "title" : "New HTML Value Card",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "elementClick" : [ {
                "name" : "segnalazione",
                "icon" : "more_horiz",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<form #addEntityForm=\"ngForm\" [formGroup]=\"addEntityFormGroup\"\n      (ngSubmit)=\"save()\" class=\"add-entity-form\">\n    <mat-toolbar fxLayout=\"row\" color=\"primary\">\n        <h2>Nuova Segnalazione</h2>\n        <span fxFlex></span>\n        <button mat-icon-button (click)=\"cancel()\" type=\"button\">\n            <mat-icon class=\"material-icons\">close</mat-icon>\n        </button>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px; width: 600px \" *ngIf=\"!(isLoading$ | async)\"></div>\n    <div mat-dialog-content fxLayout=\"column\">\n        <div fxLayout=\"column\" fxLayoutGap=\"2px\" fxLayout.md=\"column\" fxLayoutGap.md=\"0\">\n            <span style=\"font-size:20px;font-weight:bold;text-align:center;\">Macchina non disponibile</span><br>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Oggetto</mat-label>\n                <input matInput formControlName=\"oggetto\" required>\n            </mat-form-field>\n            <section fxLayout=\"row\" fxLayoutAlign=\"center\" fxLayoutGap=\"10px\" fxLayout.xs=\"column\" fxLayoutGap.xs=\"0\">\n                <mat-form-field appearance=\"fill\" style=\"width: 300px\">\n                  <mat-label>Data inizio</mat-label>\n                  <mat-datetimepicker-toggle [for]=\"DatePicker\" matPrefix></mat-datetimepicker-toggle>\n                  <mat-datetimepicker #DatePicker type=\"date\" openOnFocus=\"true\"></mat-datetimepicker>\n                  <input matInput [disabled]=\"disabled\"  [matDatetimepicker]=\"DatePicker\" formControlName=\"eventDate\" required>\n                  <mat-hint>GG/MM/AAAA</mat-hint>\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\"  style=\"width: 300px\">\n                  <mat-label>Ora inizio</mat-label>\n                  <mat-datetimepicker-toggle [for]=\"TimePicker\" matPrefix></mat-datetimepicker-toggle>\n                  <mat-datetimepicker #TimePicker type=\"time\" openOnFocus=\"true\"></mat-datetimepicker>\n                  <input matInput [disabled]=\"disabled\" [matDatetimepicker]=\"TimePicker\" formControlName=\"eventTime\" required><mat-hint>H/Min</mat-hint>\n                </mat-form-field>\n            </section>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Durata</mat-label>\n                <input matInput formControlName=\"durata\" required>\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Note</mat-label>\n              <textarea matInput formControlName=\"note\"></textarea>\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Registrato dall'utente</mat-label>\n                <input matInput formControlName=\"user\" required>\n            </mat-form-field>\n        </div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\n        <button mat-button color=\"primary\"\n                type=\"button\"\n                [disabled]=\"(isLoading$ | async)\"\n                (click)=\"cancel()\" cdkFocusInitial>\n            Cancella\n        </button>\n        <button mat-button mat-raised-button color=\"primary\"\n                type=\"submit\"\n                [disabled]=\"(isLoading$ | async) || addEntityForm.invalid || !addEntityForm.dirty\">\n            Invia\n        </button>\n    </div>\n</form>\n",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nlet segnalazione = \"Macchina non disponibile\";\n    openAddEntityDialog();\n\nfunction openAddEntityDialog() {\n    customDialog.customDialog(htmlTemplate, AddEntityDialogController).subscribe();\n}\n\nfunction AddEntityDialogController(instance) {\n    let vm = instance;\n    vm.addEntityFormGroup = vm.fb.group({\n     oggetto: [null, [vm.validators.required]],\n     eventDate:[null, [vm.validators.required]],\n     eventTime:[null, [vm.validators.required]],\n     durata:[null, [vm.validators.required]],\n     user: [null, [vm.validators.required]],\n     note: [\"\"]\n    });\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n    vm.save = function() {\n        var formData=vm.addEntityFormGroup.value;\n        formData.eventDate.setHours(formData.eventTime.getHours());\n        formData.eventDate.setMinutes(formData.eventTime.getMinutes());\n        vm.addEntityFormGroup.markAsPristine();\n        var telData={\"ts\":formData.eventDate.valueOf(), \"values\":{\"maloreoggetto\":formData.oggetto, \"maloreuser\":formData.user, \"maloredurata\":formData.durata, \"malorenote\":formData.note, \"maloreevento\":segnalazione}};\n        widgetContext.http.post('/api/plugins/telemetry/'+entityId.entityType+'/'+entityId.id+'/timeseries/ANY?scope=ANY', telData).subscribe(data =>\n        {\n        // console.log(\"data: \",data)\n            // widgetContext.updateAliases();\n            vm.dialogRef.close(null);\n        },function(error){\n            console.log(error);\n        });\n    };\n\n}\n",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "b1cb8f72-0cc1-654a-dc07-80ab5ffa429b"
              } ]
            },
            "enableDataExport" : false,
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : ""
          },
          "row" : 0,
          "col" : 0,
          "id" : "c0e79452-3b04-a1ed-5437-ee5cfcff1c19"
        },
        "836d6070-d12c-b0e1-d533-bdaa1c6637d4" : {
          "isSystemType" : true,
          "bundleAlias" : "cards",
          "typeAlias" : "html_value_card",
          "type" : "latest",
          "title" : "New widget",
          "image" : null,
          "description" : null,
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "09d911fe-e027-2993-9d45-243ac73cff59",
              "filterId" : null,
              "dataKeys" : [ ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY"
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1683549171832,
                  "endTimeMs" : 1683635571832
                },
                "quickInterval" : "CURRENT_DAY"
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div id=\"segnalazione\" class='card'>\n    <h1>Allagamento</h1>\n    <i class=\"fa fa-tint\" aria-hidden=\"true\"></i>\n</div>\n",
              "cardCss" : "@media (min-width: 1500px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n@media (max-width: 960px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n@media (min-width:960px) and (max-width: 1500px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n.card {\n    font-weight: bold;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n.card:hover{\n    transform: scale(0.9);\n}\nh1{\n    flex-wrap: wrap;\n    font-weight: bold;\n}\n.fa{\n    color:#22d3ee;\n}"
            },
            "title" : "New HTML Value Card",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "elementClick" : [ {
                "name" : "segnalazione",
                "icon" : "more_horiz",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<form #addEntityForm=\"ngForm\" [formGroup]=\"addEntityFormGroup\"\n      (ngSubmit)=\"save()\" class=\"add-entity-form\">\n    <mat-toolbar fxLayout=\"row\" color=\"primary\">\n        <h2>Nuova Segnalazione</h2>\n        <span fxFlex></span>\n        <button mat-icon-button (click)=\"cancel()\" type=\"button\">\n            <mat-icon class=\"material-icons\">close</mat-icon>\n        </button>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px; width: 600px \" *ngIf=\"!(isLoading$ | async)\"></div>\n    <div mat-dialog-content fxLayout=\"column\">\n        <div fxLayout=\"column\" fxLayoutGap=\"2px\" fxLayout.md=\"column\" fxLayoutGap.md=\"0\">\n            <span style=\"font-size:20px;font-weight:bold;text-align:center;\">Allagamento</span><br>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Oggetto</mat-label>\n                <input matInput formControlName=\"oggetto\" required>\n            </mat-form-field>\n            <section fxLayout=\"row\" fxLayoutAlign=\"center\" fxLayoutGap=\"10px\" fxLayout.xs=\"column\" fxLayoutGap.xs=\"0\">\n                <mat-form-field appearance=\"fill\" style=\"width: 300px\">\n                  <mat-label>Data inizio</mat-label>\n                  <mat-datetimepicker-toggle [for]=\"DatePicker\" matPrefix></mat-datetimepicker-toggle>\n                  <mat-datetimepicker #DatePicker type=\"date\" openOnFocus=\"true\"></mat-datetimepicker>\n                  <input matInput [disabled]=\"disabled\"  [matDatetimepicker]=\"DatePicker\" formControlName=\"eventDate\" required>\n                  <mat-hint>GG/MM/AAAA</mat-hint>\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\"  style=\"width: 300px\">\n                  <mat-label>Ora inizio</mat-label>\n                  <mat-datetimepicker-toggle [for]=\"TimePicker\" matPrefix></mat-datetimepicker-toggle>\n                  <mat-datetimepicker #TimePicker type=\"time\" openOnFocus=\"true\"></mat-datetimepicker>\n                  <input matInput [disabled]=\"disabled\" [matDatetimepicker]=\"TimePicker\" formControlName=\"eventTime\" required><mat-hint>H/Min</mat-hint>\n                </mat-form-field>\n            </section>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Durata</mat-label>\n                <input matInput formControlName=\"durata\" required>\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Note</mat-label>\n              <textarea matInput formControlName=\"note\"></textarea>\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Registrato dall'utente</mat-label>\n                <input matInput formControlName=\"user\" required>\n            </mat-form-field>\n        </div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\n        <button mat-button color=\"primary\"\n                type=\"button\"\n                [disabled]=\"(isLoading$ | async)\"\n                (click)=\"cancel()\" cdkFocusInitial>\n            Cancella\n        </button>\n        <button mat-button mat-raised-button color=\"primary\"\n                type=\"submit\"\n                [disabled]=\"(isLoading$ | async) || addEntityForm.invalid || !addEntityForm.dirty\">\n            Invia\n        </button>\n    </div>\n</form>\n",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nlet segnalazione = \"Allagamento\";\n    openAddEntityDialog();\n\nfunction openAddEntityDialog() {\n    customDialog.customDialog(htmlTemplate, AddEntityDialogController).subscribe();\n}\n\nfunction AddEntityDialogController(instance) {\n    let vm = instance;\n    vm.addEntityFormGroup = vm.fb.group({\n     oggetto: [null, [vm.validators.required]],\n     eventDate:[null, [vm.validators.required]],\n     eventTime:[null, [vm.validators.required]],\n     durata:[null, [vm.validators.required]],\n     user: [null, [vm.validators.required]],\n     note: [\"\"]\n    });\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n    vm.save = function() {\n        var formData=vm.addEntityFormGroup.value;\n        formData.eventDate.setHours(formData.eventTime.getHours());\n        formData.eventDate.setMinutes(formData.eventTime.getMinutes());\n        vm.addEntityFormGroup.markAsPristine();\n        var telData={\"ts\":formData.eventDate.valueOf(), \"values\":{\"maloreoggetto\":formData.oggetto, \"maloreuser\":formData.user, \"maloredurata\":formData.durata, \"malorenote\":formData.note, \"maloreevento\":segnalazione}};\n        widgetContext.http.post('/api/plugins/telemetry/'+entityId.entityType+'/'+entityId.id+'/timeseries/ANY?scope=ANY', telData).subscribe(data =>\n        {\n        // console.log(\"data: \",data)\n            // widgetContext.updateAliases();\n            vm.dialogRef.close(null);\n        },function(error){\n            console.log(error);\n        });\n    };\n\n}\n",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "b1cb8f72-0cc1-654a-dc07-80ab5ffa429b"
              } ]
            },
            "enableDataExport" : false,
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : ""
          },
          "row" : 0,
          "col" : 0,
          "id" : "836d6070-d12c-b0e1-d533-bdaa1c6637d4"
        },
        "d2e551ca-80d1-7dd4-0995-3c5a5b8fed2f" : {
          "isSystemType" : true,
          "bundleAlias" : "cards",
          "typeAlias" : "html_value_card",
          "type" : "latest",
          "title" : "New widget",
          "image" : null,
          "description" : null,
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "09d911fe-e027-2993-9d45-243ac73cff59",
              "filterId" : null,
              "dataKeys" : [ ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY"
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1683549171832,
                  "endTimeMs" : 1683635571832
                },
                "quickInterval" : "CURRENT_DAY"
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div id=\"segnalazione\" class='card'>\n    <h1>Organizzazione</h1>\n    <i class=\"fa fa-users\" aria-hidden=\"true\"></i>\n</div>",
              "cardCss" : "@media (min-width: 1500px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n@media (max-width: 960px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n@media (min-width:960px) and (max-width: 1500px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n.card {\n    font-weight: bold;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n.card:hover{\n    transform: scale(0.9);\n}\nh1{\n    flex-wrap: wrap;\n    font-weight: bold;\n}\n.fa{\n    color:#84cc16;\n}"
            },
            "title" : "New HTML Value Card",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "elementClick" : [ {
                "name" : "segnalazione",
                "icon" : "more_horiz",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<form #addEntityForm=\"ngForm\" [formGroup]=\"addEntityFormGroup\"\n      (ngSubmit)=\"save()\" class=\"add-entity-form\">\n    <mat-toolbar fxLayout=\"row\" color=\"primary\">\n        <h2>Nuova Segnalazione</h2>\n        <span fxFlex></span>\n        <button mat-icon-button (click)=\"cancel()\" type=\"button\">\n            <mat-icon class=\"material-icons\">close</mat-icon>\n        </button>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px; width: 600px \" *ngIf=\"!(isLoading$ | async)\"></div>\n    <div mat-dialog-content fxLayout=\"column\">\n        <div fxLayout=\"column\" fxLayoutGap=\"2px\" fxLayout.md=\"column\" fxLayoutGap.md=\"0\">\n            <span style=\"font-size:20px;font-weight:bold;text-align:center;\">Organizzazione</span><br>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Oggetto</mat-label>\n                <input matInput formControlName=\"oggetto\" required>\n            </mat-form-field>\n            <section fxLayout=\"row\" fxLayoutAlign=\"center\" fxLayoutGap=\"10px\" fxLayout.xs=\"column\" fxLayoutGap.xs=\"0\">\n                <mat-form-field appearance=\"fill\" style=\"width: 300px\">\n                  <mat-label>Data inizio</mat-label>\n                  <mat-datetimepicker-toggle [for]=\"DatePicker\" matPrefix></mat-datetimepicker-toggle>\n                  <mat-datetimepicker #DatePicker type=\"date\" openOnFocus=\"true\"></mat-datetimepicker>\n                  <input matInput [disabled]=\"disabled\"  [matDatetimepicker]=\"DatePicker\" formControlName=\"eventDate\" required>\n                  <mat-hint>GG/MM/AAAA</mat-hint>\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\"  style=\"width: 300px\">\n                  <mat-label>Ora inizio</mat-label>\n                  <mat-datetimepicker-toggle [for]=\"TimePicker\" matPrefix></mat-datetimepicker-toggle>\n                  <mat-datetimepicker #TimePicker type=\"time\" openOnFocus=\"true\"></mat-datetimepicker>\n                  <input matInput [disabled]=\"disabled\" [matDatetimepicker]=\"TimePicker\" formControlName=\"eventTime\" required><mat-hint>H/Min</mat-hint>\n                </mat-form-field>\n            </section>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Durata</mat-label>\n                <input matInput formControlName=\"durata\" required>\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Note</mat-label>\n              <textarea matInput formControlName=\"note\"></textarea>\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Registrato dall'utente</mat-label>\n                <input matInput formControlName=\"user\" required>\n            </mat-form-field>\n        </div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\n        <button mat-button color=\"primary\"\n                type=\"button\"\n                [disabled]=\"(isLoading$ | async)\"\n                (click)=\"cancel()\" cdkFocusInitial>\n            Cancella\n        </button>\n        <button mat-button mat-raised-button color=\"primary\"\n                type=\"submit\"\n                [disabled]=\"(isLoading$ | async) || addEntityForm.invalid || !addEntityForm.dirty\">\n            Invia\n        </button>\n    </div>\n</form>\n",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nlet segnalazione = \"Organizzazione\";\n    openAddEntityDialog();\n\nfunction openAddEntityDialog() {\n    customDialog.customDialog(htmlTemplate, AddEntityDialogController).subscribe();\n}\n\nfunction AddEntityDialogController(instance) {\n    let vm = instance;\n    vm.addEntityFormGroup = vm.fb.group({\n     oggetto: [null, [vm.validators.required]],\n     eventDate:[null, [vm.validators.required]],\n     eventTime:[null, [vm.validators.required]],\n     durata:[null, [vm.validators.required]],\n     user: [null, [vm.validators.required]],\n     note: [\"\"]\n    });\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n    vm.save = function() {\n        var formData=vm.addEntityFormGroup.value;\n        formData.eventDate.setHours(formData.eventTime.getHours());\n        formData.eventDate.setMinutes(formData.eventTime.getMinutes());\n        vm.addEntityFormGroup.markAsPristine();\n        var telData={\"ts\":formData.eventDate.valueOf(), \"values\":{\"maloreoggetto\":formData.oggetto, \"maloreuser\":formData.user, \"maloredurata\":formData.durata, \"malorenote\":formData.note, \"maloreevento\":segnalazione}};\n        widgetContext.http.post('/api/plugins/telemetry/'+entityId.entityType+'/'+entityId.id+'/timeseries/ANY?scope=ANY', telData).subscribe(data =>\n        {\n        // console.log(\"data: \",data)\n            // widgetContext.updateAliases();\n            vm.dialogRef.close(null);\n        },function(error){\n            console.log(error);\n        });\n    };\n\n}\n",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "b1cb8f72-0cc1-654a-dc07-80ab5ffa429b"
              } ]
            },
            "enableDataExport" : false,
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : ""
          },
          "row" : 0,
          "col" : 0,
          "id" : "d2e551ca-80d1-7dd4-0995-3c5a5b8fed2f"
        },
        "eba9a000-462a-ade8-df3e-44a3fe548c4f" : {
          "isSystemType" : true,
          "bundleAlias" : "cards",
          "typeAlias" : "html_value_card",
          "type" : "latest",
          "title" : "New widget",
          "image" : null,
          "description" : null,
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "09d911fe-e027-2993-9d45-243ac73cff59",
              "filterId" : null,
              "dataKeys" : [ ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY"
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1683549171832,
                  "endTimeMs" : 1683635571832
                },
                "quickInterval" : "CURRENT_DAY"
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div id=\"segnalazione\" class='card'>\n    <h1>Blackout</h1>\n    <i class=\"fa fa-bolt\" aria-hidden=\"true\"></i>\n</div>",
              "cardCss" : "@media (min-width: 1500px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n@media (max-width: 960px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n@media (min-width:960px) and (max-width: 1500px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n.card {\n    font-weight: bold;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n.card:hover{\n    transform: scale(0.9);\n}\nh1{\n    flex-wrap: wrap;\n    font-weight: bold;\n}\n.fa{\n    color:#facc15;\n}"
            },
            "title" : "New HTML Value Card",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "elementClick" : [ {
                "name" : "segnalazione",
                "icon" : "more_horiz",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<form #addEntityForm=\"ngForm\" [formGroup]=\"addEntityFormGroup\"\n      (ngSubmit)=\"save()\" class=\"add-entity-form\">\n    <mat-toolbar fxLayout=\"row\" color=\"primary\">\n        <h2>Nuova Segnalazione</h2>\n        <span fxFlex></span>\n        <button mat-icon-button (click)=\"cancel()\" type=\"button\">\n            <mat-icon class=\"material-icons\">close</mat-icon>\n        </button>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px; width: 600px \" *ngIf=\"!(isLoading$ | async)\"></div>\n    <div mat-dialog-content fxLayout=\"column\">\n        <div fxLayout=\"column\" fxLayoutGap=\"2px\" fxLayout.md=\"column\" fxLayoutGap.md=\"0\">\n            <span style=\"font-size:20px;font-weight:bold;text-align:center;\">Blackout</span><br>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Oggetto</mat-label>\n                <input matInput formControlName=\"oggetto\" required>\n            </mat-form-field>\n            <section fxLayout=\"row\" fxLayoutAlign=\"center\" fxLayoutGap=\"10px\" fxLayout.xs=\"column\" fxLayoutGap.xs=\"0\">\n                <mat-form-field appearance=\"fill\" style=\"width: 300px\">\n                  <mat-label>Data inizio</mat-label>\n                  <mat-datetimepicker-toggle [for]=\"DatePicker\" matPrefix></mat-datetimepicker-toggle>\n                  <mat-datetimepicker #DatePicker type=\"date\" openOnFocus=\"true\"></mat-datetimepicker>\n                  <input matInput [disabled]=\"disabled\"  [matDatetimepicker]=\"DatePicker\" formControlName=\"eventDate\" required>\n                  <mat-hint>GG/MM/AAAA</mat-hint>\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\"  style=\"width: 300px\">\n                  <mat-label>Ora inizio</mat-label>\n                  <mat-datetimepicker-toggle [for]=\"TimePicker\" matPrefix></mat-datetimepicker-toggle>\n                  <mat-datetimepicker #TimePicker type=\"time\" openOnFocus=\"true\"></mat-datetimepicker>\n                  <input matInput [disabled]=\"disabled\" [matDatetimepicker]=\"TimePicker\" formControlName=\"eventTime\" required><mat-hint>H/Min</mat-hint>\n                </mat-form-field>\n            </section>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Durata</mat-label>\n                <input matInput formControlName=\"durata\" required>\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Note</mat-label>\n              <textarea matInput formControlName=\"note\"></textarea>\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Registrato dall'utente</mat-label>\n                <input matInput formControlName=\"user\" required>\n            </mat-form-field>\n        </div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\n        <button mat-button color=\"primary\"\n                type=\"button\"\n                [disabled]=\"(isLoading$ | async)\"\n                (click)=\"cancel()\" cdkFocusInitial>\n            Cancella\n        </button>\n        <button mat-button mat-raised-button color=\"primary\"\n                type=\"submit\"\n                [disabled]=\"(isLoading$ | async) || addEntityForm.invalid || !addEntityForm.dirty\">\n            Invia\n        </button>\n    </div>\n</form>\n",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nlet segnalazione = \"Blackout\";\n    openAddEntityDialog();\n\nfunction openAddEntityDialog() {\n    customDialog.customDialog(htmlTemplate, AddEntityDialogController).subscribe();\n}\n\nfunction AddEntityDialogController(instance) {\n    let vm = instance;\n    vm.addEntityFormGroup = vm.fb.group({\n     oggetto: [null, [vm.validators.required]],\n     eventDate:[null, [vm.validators.required]],\n     eventTime:[null, [vm.validators.required]],\n     durata:[null, [vm.validators.required]],\n     user: [null, [vm.validators.required]],\n     note: [\"\"]\n    });\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n    vm.save = function() {\n        var formData=vm.addEntityFormGroup.value;\n        formData.eventDate.setHours(formData.eventTime.getHours());\n        formData.eventDate.setMinutes(formData.eventTime.getMinutes());\n        vm.addEntityFormGroup.markAsPristine();\n        var telData={\"ts\":formData.eventDate.valueOf(), \"values\":{\"maloreoggetto\":formData.oggetto, \"maloreuser\":formData.user, \"maloredurata\":formData.durata, \"malorenote\":formData.note, \"maloreevento\":segnalazione}};\n        widgetContext.http.post('/api/plugins/telemetry/'+entityId.entityType+'/'+entityId.id+'/timeseries/ANY?scope=ANY', telData).subscribe(data =>\n        {\n        // console.log(\"data: \",data)\n            // widgetContext.updateAliases();\n            vm.dialogRef.close(null);\n        },function(error){\n            console.log(error);\n        });\n    };\n\n}\n",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "b1cb8f72-0cc1-654a-dc07-80ab5ffa429b"
              } ]
            },
            "enableDataExport" : false,
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : ""
          },
          "row" : 0,
          "col" : 0,
          "id" : "eba9a000-462a-ade8-df3e-44a3fe548c4f"
        },
        "8df920c1-bd67-9ae2-9b5b-f1e631fe5238" : {
          "isSystemType" : true,
          "bundleAlias" : "cards",
          "typeAlias" : "html_value_card",
          "type" : "latest",
          "title" : "New widget",
          "image" : null,
          "description" : null,
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : null,
              "entityAliasId" : "09d911fe-e027-2993-9d45-243ac73cff59",
              "filterId" : null,
              "dataKeys" : [ ]
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY"
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1683549171832,
                  "endTimeMs" : 1683635571832
                },
                "quickInterval" : "CURRENT_DAY"
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "cardHtml" : "<div id=\"segnalazione\" class='card'>\n    <h1>Nulla da fare</h1>\n    <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i>\n</div>",
              "cardCss" : "@media (min-width: 1500px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n@media (max-width: 960px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n@media (min-width:960px) and (max-width: 1500px) {\n    .card {\n        font-size: 50px;\n    }\n    h1{\n        font-size: 22px;\n    }\n}\n.card {\n    font-weight: bold;\n    color: #999;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n.card:hover{\n    transform: scale(0.9);\n}\nh1{\n    flex-wrap: wrap;\n    font-weight: bold;\n}\n.fa{\n    color:blue;\n}"
            },
            "title" : "New HTML Value Card",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : {
              "elementClick" : [ {
                "name" : "segnalazione",
                "icon" : "more_horiz",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "customPretty",
                "customHtml" : "<form #addEntityForm=\"ngForm\" [formGroup]=\"addEntityFormGroup\"\n      (ngSubmit)=\"save()\" class=\"add-entity-form\">\n    <mat-toolbar fxLayout=\"row\" color=\"primary\">\n        <h2>Nuova Segnalazione</h2>\n        <span fxFlex></span>\n        <button mat-icon-button (click)=\"cancel()\" type=\"button\">\n            <mat-icon class=\"material-icons\">close</mat-icon>\n        </button>\n    </mat-toolbar>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\">\n    </mat-progress-bar>\n    <div style=\"height: 4px; width: 600px \" *ngIf=\"!(isLoading$ | async)\"></div>\n    <div mat-dialog-content fxLayout=\"column\">\n        <div fxLayout=\"column\" fxLayoutGap=\"2px\" fxLayout.md=\"column\" fxLayoutGap.md=\"0\">\n            <span style=\"font-size:20px;font-weight:bold;text-align:center;\">Nulla da fare</span><br>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Oggetto</mat-label>\n                <input matInput formControlName=\"oggetto\" required>\n            </mat-form-field>\n            <section fxLayout=\"row\" fxLayoutAlign=\"center\" fxLayoutGap=\"10px\" fxLayout.xs=\"column\" fxLayoutGap.xs=\"0\">\n                <mat-form-field appearance=\"fill\" style=\"width: 300px\">\n                  <mat-label>Data inizio</mat-label>\n                  <mat-datetimepicker-toggle [for]=\"DatePicker\" matPrefix></mat-datetimepicker-toggle>\n                  <mat-datetimepicker #DatePicker type=\"date\" openOnFocus=\"true\"></mat-datetimepicker>\n                  <input matInput [disabled]=\"disabled\"  [matDatetimepicker]=\"DatePicker\" formControlName=\"eventDate\" required>\n                  <mat-hint>GG/MM/AAAA</mat-hint>\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\"  style=\"width: 300px\">\n                  <mat-label>Ora inizio</mat-label>\n                  <mat-datetimepicker-toggle [for]=\"TimePicker\" matPrefix></mat-datetimepicker-toggle>\n                  <mat-datetimepicker #TimePicker type=\"time\" openOnFocus=\"true\"></mat-datetimepicker>\n                  <input matInput [disabled]=\"disabled\" [matDatetimepicker]=\"TimePicker\" formControlName=\"eventTime\" required><mat-hint>H/Min</mat-hint>\n                </mat-form-field>\n            </section>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Durata</mat-label>\n                <input matInput formControlName=\"durata\" required>\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Note</mat-label>\n              <textarea matInput formControlName=\"note\"></textarea>\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Registrato dall'utente</mat-label>\n                <input matInput formControlName=\"user\" required>\n            </mat-form-field>\n        </div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\n        <button mat-button color=\"primary\"\n                type=\"button\"\n                [disabled]=\"(isLoading$ | async)\"\n                (click)=\"cancel()\" cdkFocusInitial>\n            Cancella\n        </button>\n        <button mat-button mat-raised-button color=\"primary\"\n                type=\"submit\"\n                [disabled]=\"(isLoading$ | async) || addEntityForm.invalid || !addEntityForm.dirty\">\n            Invia\n        </button>\n    </div>\n</form>\n",
                "customCss" : "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .mat-form-field-infix {\n    width: auto !important;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction" : "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\n\nlet segnalazione = \"Nulla da fare\";\n    openAddEntityDialog();\n\nfunction openAddEntityDialog() {\n    customDialog.customDialog(htmlTemplate, AddEntityDialogController).subscribe();\n}\n\nfunction AddEntityDialogController(instance) {\n    let vm = instance;\n    vm.addEntityFormGroup = vm.fb.group({\n     oggetto: [null, [vm.validators.required]],\n     eventDate:[null, [vm.validators.required]],\n     eventTime:[null, [vm.validators.required]],\n     durata:[null, [vm.validators.required]],\n     user: [null, [vm.validators.required]],\n     note: [\"\"]\n    });\n\n    vm.cancel = function() {\n        vm.dialogRef.close(null);\n    };\n    vm.save = function() {\n        var formData=vm.addEntityFormGroup.value;\n        formData.eventDate.setHours(formData.eventTime.getHours());\n        formData.eventDate.setMinutes(formData.eventTime.getMinutes());\n        vm.addEntityFormGroup.markAsPristine();\n        var telData={\"ts\":formData.eventDate.valueOf(), \"values\":{\"maloreoggetto\":formData.oggetto, \"maloreuser\":formData.user, \"maloredurata\":formData.durata, \"malorenote\":formData.note, \"maloreevento\":segnalazione}};\n        widgetContext.http.post('/api/plugins/telemetry/'+entityId.entityType+'/'+entityId.id+'/timeseries/ANY?scope=ANY', telData).subscribe(data =>\n        {\n        // console.log(\"data: \",data)\n            // widgetContext.updateAliases();\n            vm.dialogRef.close(null);\n        },function(error){\n            console.log(error);\n        });\n    };\n\n}\n",
                "customResources" : [ ],
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "b1cb8f72-0cc1-654a-dc07-80ab5ffa429b"
              } ]
            },
            "enableDataExport" : false,
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : ""
          },
          "row" : 0,
          "col" : 0,
          "id" : "8df920c1-bd67-9ae2-9b5b-f1e631fe5238"
        }
      },
      "states" : {
        "default" : {
          "name" : "Manutenzioni",
          "root" : true,
          "layouts" : {
            "main" : {
              "widgets" : {
                "7418f1c8-a03a-dbd6-7095-c55c58887b2f" : {
                  "sizeX" : 6,
                  "sizeY" : 3,
                  "row" : 0,
                  "col" : 0
                },
                "2d05bbf9-0dd2-f4ce-6d17-371fcce84fb5" : {
                  "sizeX" : 6,
                  "sizeY" : 3,
                  "row" : 0,
                  "col" : 6
                },
                "2ab06957-dc20-5546-b305-d8e6f5c03308" : {
                  "sizeX" : 6,
                  "sizeY" : 3,
                  "row" : 0,
                  "col" : 12
                },
                "bfad4c81-5359-dc2e-ec2f-89ebed0ac563" : {
                  "sizeX" : 6,
                  "sizeY" : 3,
                  "row" : 0,
                  "col" : 18
                },
                "903b1f8b-81e9-6f20-27c0-f2f5bf5246b9" : {
                  "sizeX" : 6,
                  "sizeY" : 3,
                  "row" : 3,
                  "col" : 0
                },
                "82d439a1-2d86-6a4a-da05-8745dd237a7a" : {
                  "sizeX" : 6,
                  "sizeY" : 3,
                  "row" : 3,
                  "col" : 6
                },
                "31b98465-9d5f-9893-8fc8-c4880e388df1" : {
                  "sizeX" : 6,
                  "sizeY" : 3,
                  "row" : 3,
                  "col" : 12
                },
                "d9d19552-795e-b804-b490-ccbb4dffd0d9" : {
                  "sizeX" : 6,
                  "sizeY" : 3,
                  "row" : 3,
                  "col" : 18
                },
                "10040814-4aec-c659-e4b6-ac790d49c8ad" : {
                  "sizeX" : 6,
                  "sizeY" : 3,
                  "row" : 6,
                  "col" : 0
                },
                "70116cf0-9ac3-69ec-de55-9dd349970ab3" : {
                  "sizeX" : 6,
                  "sizeY" : 3,
                  "row" : 9,
                  "col" : 0
                },
                "13b953cc-d0dc-7bdc-ae42-8c8f7ffaa009" : {
                  "sizeX" : 6,
                  "sizeY" : 3,
                  "row" : 6,
                  "col" : 6
                },
                "c0e79452-3b04-a1ed-5437-ee5cfcff1c19" : {
                  "sizeX" : 6,
                  "sizeY" : 3,
                  "row" : 9,
                  "col" : 6
                },
                "836d6070-d12c-b0e1-d533-bdaa1c6637d4" : {
                  "sizeX" : 6,
                  "sizeY" : 3,
                  "row" : 6,
                  "col" : 12
                },
                "d2e551ca-80d1-7dd4-0995-3c5a5b8fed2f" : {
                  "sizeX" : 6,
                  "sizeY" : 3,
                  "row" : 9,
                  "col" : 12
                },
                "eba9a000-462a-ade8-df3e-44a3fe548c4f" : {
                  "sizeX" : 6,
                  "sizeY" : 3,
                  "row" : 6,
                  "col" : 18
                },
                "8df920c1-bd67-9ae2-9b5b-f1e631fe5238" : {
                  "sizeX" : 6,
                  "sizeY" : 3,
                  "row" : 9,
                  "col" : 18
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#eeeeee",
                "columns" : 24,
                "margin" : 10,
                "outerMargin" : true,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70
              }
            }
          }
        }
      },
      "entityAliases" : {
        "09d911fe-e027-2993-9d45-243ac73cff59" : {
          "id" : "09d911fe-e027-2993-9d45-243ac73cff59",
          "alias" : "device",
          "filter" : {
            "type" : "singleEntity",
            "resolveMultiple" : false,
            "singleEntity" : {
              "entityType" : "DEVICE",
              "id" : "591703c0-403c-11ee-bb94-e90efb8ecc83"
            }
          }
        }
      },
      "filters" : { },
      "timewindow" : {
        "displayValue" : "",
        "hideInterval" : false,
        "hideLastInterval" : false,
        "hideQuickInterval" : false,
        "hideAggregation" : false,
        "hideAggInterval" : false,
        "hideTimezone" : false,
        "selectedTab" : 0,
        "realtime" : {
          "realtimeType" : 0,
          "interval" : 1000,
          "timewindowMs" : 60000,
          "quickInterval" : "CURRENT_DAY"
        },
        "history" : {
          "historyType" : 0,
          "interval" : 1000,
          "timewindowMs" : 60000,
          "fixedTimewindow" : {
            "startTimeMs" : 1695548572098,
            "endTimeMs" : 1695634972098
          },
          "quickInterval" : "CURRENT_DAY"
        },
        "aggregation" : {
          "type" : "AVG",
          "limit" : 25000
        }
      },
      "settings" : {
        "stateControllerId" : "entity",
        "showTitle" : false,
        "showDashboardsSelect" : true,
        "showEntitiesSelect" : true,
        "showDashboardTimewindow" : true,
        "showDashboardExport" : true,
        "toolbarAlwaysOpen" : true
      }
    },
    "customerId" : null,
    "externalId" : null,
    "id" : {
      "entityType" : "DASHBOARD",
      "id" : "e4cdcff0-5b87-11ee-bb94-e90efb8ecc83"
    },
    "image" : null,
    "mobileHide" : false,
    "mobileOrder" : null,
    "name" : "Manutenzioni",
    "ownerId" : null,
    "title" : "Manutenzioni"
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}