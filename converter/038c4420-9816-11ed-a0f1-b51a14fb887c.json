{
  "entityType" : "CONVERTER",
  "entity" : {
    "additionalInfo" : {
      "description" : ""
    },
    "configuration" : {
      "scriptLang" : "TBEL",
      "decoder" : "/** Decoder **/\n\n// decode payload to string\nvar data = decodeToString(payload);\n\n// deviceName\nvar deviceName =  metadata.topic.split(\"/\")[1];\n\n// pattern\nvar patterncar = 'frigate/'+deviceName+'/car';\nvar patternperson = 'frigate/'+deviceName+'/person';\nvar patternbicycle = 'frigate/'+deviceName+'/bicycle';\nvar patterncarsnapshot = 'frigate/'+deviceName+'/car/snapshot';\nvar patternpersonsnapshot = 'frigate/'+deviceName+'/person/snapshot';\nvar patternbicyclesnapshot = 'frigate/'+deviceName+'/bicycle/snapshot';\n\nswitch (metadata.topic) {\n    case patterncar:\n        var car = data;\n        break;\n    case patternperson:\n        var person = data;\n        break;\n    case patternbicycle:\n        var bicycle = data;\n        break;\n    case patterncarsnapshot:\n        var carsnapshot = payload;\n        break;\n    case patternpersonsnapshot:\n        var personsnapshot = payload;\n        break;\n    case patternbicyclesnapshot:\n        var bicyclesnapshot = payload;\n        break;\n    default:\n}\n\nvar deviceType = 'sensor';\n\n// Result object with device attributes/telemetry data\nvar result = {\n    deviceName: deviceName,\n    deviceType: deviceType,\n    telemetry: {\n       car: car,\n       person: person,\n       bicycle: bicycle,\n       carsnapshot: carsnapshot,\n       personsnapshot: personsnapshot,\n       bicyclesnapshot: bicyclesnapshot\n   }\n};\n\n/** Helper functions **/\n\nfunction decodeToString(payload) {\n   return String.fromCharCode.apply(String, payload);\n}\n\nfunction decodeToJson(payload) {\n   // convert payload to string.\n   var str = decodeToString(payload);\n\n   // parse string to JSON\n   var data = JSON.parse(str);\n   return data;\n}\n\n\n\nreturn result;",
      "tbelDecoder" : "/** Decoder **/\n\n// decode payload to string\nvar data = decodeToString(payload);\nvar img = bytesToBase64(payload);\n// var decalration\nvar deviceName =  metadata.topic.split(\"/\")[1];\nvar deviceType = 'sensor';\nvar car = null;\nvar person = null;\nvar bicycle = null;\nvar carsnapshot = null;\nvar personsnapshot = null;\nvar bicyclesnapshot = null;\nvar t = metadata.topic;\n\n// pattern\nvar patterncar = 'frigate/'+deviceName+'/car';\nvar patternperson = 'frigate/'+deviceName+'/person';\nvar patternbicycle = 'frigate/'+deviceName+'/bicycle';\nvar patterncarsnapshot = 'frigate/'+deviceName+'/car/snapshot';\nvar patternpersonsnapshot = 'frigate/'+deviceName+'/person/snapshot';\nvar patternbicyclesnapshot = 'frigate/'+deviceName+'/bicycle/snapshot';\n\nif(t==patterncar){\n    car = data;\n} else if(t==patternperson){\n    person = data;\n} else if(t==patternbicycle){\n    bicycle = data;\n} else if(t==patterncarsnapshot){\n    carsnapshot = img;\n} else if(t==patternpersonsnapshot){\n    personsnapshot = img;\n} else if(t==patternbicyclesnapshot){\n    bicyclesnapshot = img;\n}\n\n\n// Result object with device attributes/telemetry data\nvar result = {\n    deviceName: deviceName,\n    deviceType: deviceType,\n    telemetry: {\n       car: car,\n       person: person,\n       bicycle: bicycle,\n       carsnapshot: carsnapshot,\n       personsnapshot: personsnapshot,\n       bicyclesnapshot: bicyclesnapshot\n   }\n};\n\n/** Helper functions **/\n\nfunction decodeToString(payload) {\n   return String.fromCharCode.apply(String, payload);\n}\n\nfunction decodeToJson(payload) {\n   // convert payload to string.\n   var str = decodeToString(payload);\n\n   // parse string to JSON\n   var data = JSON.parse(str);\n   return data;\n}\n\n\n\nreturn result;",
      "encoder" : null,
      "tbelEncoder" : null
    },
    "debugMode" : true,
    "edgeTemplate" : false,
    "externalId" : null,
    "id" : {
      "entityType" : "CONVERTER",
      "id" : "038c4420-9816-11ed-a0f1-b51a14fb887c"
    },
    "name" : "Frigate",
    "type" : "UPLINK"
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}