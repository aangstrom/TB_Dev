{
  "entityType" : "CONVERTER",
  "entity" : {
    "additionalInfo" : {
      "description" : ""
    },
    "configuration" : {
      "scriptLang" : "TBEL",
      "decoder" : "/** Decoder **/\n\n// decode payload to string\nvar data = decodeToString(payload);\n\n// deviceName\nvar deviceName =  metadata.topic.split(\"/\")[1];\n\n// pattern\nvar patterncar = 'frigate/'+deviceName+'/car';\nvar patternperson = 'frigate/'+deviceName+'/person';\nvar patternbicycle = 'frigate/'+deviceName+'/bicycle';\nvar patterncarsnapshot = 'frigate/'+deviceName+'/car/snapshot';\nvar patternpersonsnapshot = 'frigate/'+deviceName+'/person/snapshot';\nvar patternbicyclesnapshot = 'frigate/'+deviceName+'/bicycle/snapshot';\n\nswitch (metadata.topic) {\n    case patterncar:\n        var car = data;\n        break;\n    case patternperson:\n        var person = data;\n        break;\n    case patternbicycle:\n        var bicycle = data;\n        break;\n    case patterncarsnapshot:\n        var carsnapshot = payload;\n        break;\n    case patternpersonsnapshot:\n        var personsnapshot = payload;\n        break;\n    case patternbicyclesnapshot:\n        var bicyclesnapshot = payload;\n        break;\n    default:\n}\n\nvar deviceType = 'sensor';\n\n// Result object with device attributes/telemetry data\nvar result = {\n    deviceName: deviceName,\n    deviceType: deviceType,\n    telemetry: {\n       car: car,\n       person: person,\n       bicycle: bicycle,\n       carsnapshot: carsnapshot,\n       personsnapshot: personsnapshot,\n       bicyclesnapshot: bicyclesnapshot\n   }\n};\n\n/** Helper functions **/\n\nfunction decodeToString(payload) {\n   return String.fromCharCode.apply(String, payload);\n}\n\nfunction decodeToJson(payload) {\n   // convert payload to string.\n   var str = decodeToString(payload);\n\n   // parse string to JSON\n   var data = JSON.parse(str);\n   return data;\n}\n\n\n\nreturn result;",
      "tbelDecoder" : "/** Decoder **/\n// var decalration\nvar deviceName;\nvar deviceType = 'sensor';\nvar car;\nvar person;\nvar bicycle;\nvar backpack;\nvar handbag;\nvar carsnapshot;\nvar personsnapshot;\nvar bicyclesnapshot;\nvar backpacksnapshot;\nvar handbagsnapshot;\nvar zone_0;\nvar zone_1;\nvar zone_2;\nvar t;\nvar result;\n/*var before_id;\nvar before_frame_time;\nvar before_snapshot_time;\nvar before_label;\nvar before_sub_label;\nvar before_top_score;\nvar before_false_positive;\nvar before_start_time;\nvar before_end_time;\nvar before_score;\nvar before_box;\nvar before_area;\nvar before_ratio;\nvar before_region;\nvar before_stationary;\nvar before_motionless_count;\nvar before_position_changes;\nvar before_current_zones;\nvar before_entered_zones;\nvar before_has_clip;\nvar after_id;\nvar after_frame_time;\nvar after_snapshot_time;\nvar after_label;\nvar after_sub_label;\nvar after_top_score;\nvar after_false_positive;\nvar after_start_time;\nvar after_end_time;\nvar after_score;\nvar after_box;\nvar after_area;\nvar after_ratio;\nvar after_region;\nvar after_stationary;\nvar after_motionless_count;\nvar after_position_changes;\nvar after_current_zones;\nvar after_entered_zones;\nvar after_has_clip;\nvar type;\nvar boxtrackx;\nvar boxtracky;*/\n\nvar deviceName=metadata.topic.split(\"/\")[1];\ncar = null;\nperson = null;\nbicycle = null;\nbackpack = null;\nhandbag = null;\ncarsnapshot = null;\npersonsnapshot = null;\nbicyclesnapshot = null;\nbackpacksnapshot = null;\nhandbagsnapshot = null;\nzone_0 = null;\nzone_1 = null;\nzone_2 = null;\nt = metadata.topic;\n// pattern\nvar patterncar = 'frigate/'+deviceName+'/car';\nvar patternperson = 'frigate/'+deviceName+'/person';\nvar patternbicycle = 'frigate/'+deviceName+'/bicycle';\nvar patternbackpack = 'frigate/'+deviceName+'/backpack';\nvar patternhandbag = 'frigate/'+deviceName+'/handbag';\nvar patterncarsnapshot = 'frigate/'+deviceName+'/car/snapshot';\nvar patternpersonsnapshot = 'frigate/'+deviceName+'/person/snapshot';\nvar patternbicyclesnapshot = 'frigate/'+deviceName+'/bicycle/snapshot';\nvar patternbackpacksnapshot = 'frigate/'+deviceName+'/backpack/snapshot';\nvar patternhandbagsnapshot = 'frigate/'+deviceName+'/handbag/snapshot';\n    \nif(t==patterncar){\n    car = decodeToString(payload);\n} else if(t==patternperson){\n    person = decodeToString(payload);\n} else if(t==patternbicycle){\n    bicycle = decodeToString(payload);\n} else if(t==patternbackpack){\n    backpack = decodeToString(payload);   \n} else if(t==patternhandbag){\n    handbag = decodeToString(payload);    \n} else if(t==patterncarsnapshot){\n    carsnapshot = bytesToBase64(payload);\n} else if(t==patternpersonsnapshot){\n    personsnapshot = bytesToBase64(payload);\n} else if(t==patternbicyclesnapshot){\n    bicyclesnapshot = bytesToBase64(payload);\n} else if(t==patternbackpacksnapshot){\n    backpacksnapshot = bytesToBase64(payload);\n} else if(t==patternhandbagsnapshot){\n    handbagsnapshot = bytesToBase64(payload);    \n}\n\nif(deviceName===\"restart\" || deviceName==\"available\" || deviceName==\"stats\" || deviceName==\"zone_0\" || deviceName==\"zone_1\" || deviceName==\"zone_2\" ){\n    result=null;\n}else if(deviceName===\"events\"){\n    var events=decodeToJson(payload);\n    result = {\n        deviceName: events.before.camera,\n        attributes:{\n            events:events,\n        }\n    };\n}else {\n    result = {\n       deviceName: deviceName,\n       deviceType: deviceType,\n       attributes: {\n           carsnapshot: carsnapshot,\n           personsnapshot: personsnapshot,\n           bicyclesnapshot: bicyclesnapshot,\n           backpacksnapshot: backpacksnapshot,\n           handbagsnapshot: handbagsnapshot\n       },\n       telemetry: {\n           car: car,\n           person: person,\n           bicycle: bicycle,\n           backpack: backpack,\n           handbag: handbag\n       }\n    };\n}\n\n\n/** Helper functions **/\n\nfunction decodeToString(payload) {\n   return String.fromCharCode.apply(String, payload);\n}\n\nreturn result;",
      "encoder" : null,
      "tbelEncoder" : null
    },
    "debugMode" : true,
    "edgeTemplate" : false,
    "externalId" : null,
    "id" : {
      "entityType" : "CONVERTER",
      "id" : "21e9e8c0-f72d-11ed-9a4b-e3fd271b8b84"
    },
    "name" : "Frigate_copy",
    "type" : "UPLINK"
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}