{
  "entityType" : "RULE_CHAIN",
  "entity" : {
    "additionalInfo" : {
      "description" : ""
    },
    "configuration" : null,
    "debugMode" : false,
    "externalId" : null,
    "firstRuleNodeId" : null,
    "id" : {
      "entityType" : "RULE_CHAIN",
      "id" : "fba98a80-f41b-11ed-9a4b-e3fd271b8b84"
    },
    "name" : "EnergyConsumer",
    "root" : false,
    "type" : "CORE"
  },
  "metaData" : {
    "connections" : [ {
      "fromIndex" : 0,
      "toIndex" : 2,
      "type" : "Success"
    } ],
    "firstNodeIndex" : null,
    "nodes" : [ {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 52,
        "layoutY" : 251
      },
      "configuration" : {
        "msgCount" : 0,
        "periodInSeconds" : 5,
        "scriptLang" : "TBEL",
        "jsScript" : "var msg = { temp: 42, humidity: 77 };\nvar metadata = { data: 40 };\nvar msgType = \"POST_TELEMETRY_REQUEST\";\n\nreturn { msg: msg, metadata: metadata, msgType: msgType };",
        "tbelScript" : "var metadata = { data: 40 };\nvar msgType = \"POST_TELEMETRY_REQUEST\";\n//var hour = new Date().getHours();\nvar hour = Math.random() * (25 - 0);\nvar pf = Math.random();\nif (pf<0.5) { pf = pf + 0.5; }\npf = toFixed( pf, 2);\n\nvar Tariffa1 = 0;\nvar Tariffa2 = 0; \nvar Tariffa3 = 0;\nvar Importo = 0;\nvar Operativo = 0;\nvar OperativoCost = 0;\nvar NonOperativo = 0;\nvar NonOperativoCost = 0;\nvar Pranzo = 0;\nvar PranzoCost = 0;\nvar LowCharge = 0;\nvar LowChargeCost = 0;\nvar NormalCharge = 0;\nvar NormalChargeCost = 0;\nvar HighCharge = 0;\nvar HighChargeCost = 0;\nvar CurrentFare = 0;\n\nvar kw = 500 + Math.random() * (1800 - 500);\nkw = Math.round( kw * 100 ) / 100;\n\n// Calcolo Importi per Tariffa\nif (hour>=0 && hour<=8) {\n    CurrentFare = 2;\n    Tariffa1 = kw * CurrentFare;\n//    Tariffa1 = Math.round( Tariffa1 * 100 ) / 100;\n    Tariffa2 = 0;\n    Tariffa3 = 0;\n    Importo = Tariffa1;\n}else if (hour>=9 && hour<=16) {\n    CurrentFare = 2.5;\n    Tariffa2 = kw * CurrentFare;\n//    Tariffa2 = Math.round( Tariffa2 * 100 ) / 100;\n    Tariffa1 = 0;\n    Tariffa3 = 0;    \n    Importo = Tariffa2;\n}else if (hour>=17 && hour<=23) {\n    CurrentFare = 1.6;\n    Tariffa3 = kw * CurrentFare;\n//    Tariffa3 = Math.round( Tariffa3 * 100 ) / 100;\n    Tariffa2 = 0;\n    Tariffa1 = 0;    \n    Importo = Tariffa3;\n}else {\n    CurrentFare = 1.6;\n    Tariffa3 = kw * CurrentFare;\n//    Tariffa3 = Math.round( Tariffa3 * 100 ) / 100;\n    Importo = Tariffa3;\n}\n\n// Tariffa1 = Math.round( Tariffa1 * 100 ) / 100;\n// Tariffa2 = Math.round( Tariffa2 * 100 ) / 100;\n// Tariffa3 = Math.round( Tariffa3 * 100 ) / 100;\n\n// Calcolo Tipologia Oraria\nif (hour>=8 && hour<=12) {\n    Operativo = kw;\n    OperativoCost = kw * CurrentFare;\n    Pranzo = 0;\n    NonOperativo = 0;\n}else if (hour>=13 && hour<=14) {\n    Pranzo = kw;\n    PranzoCost = kw * CurrentFare;\n    Operativo = 0;\n    NonOperativo = 0;    \n}else if (hour>=15 && hour<=18) {\n    Operativo = kw;\n    OperativoCost = kw * CurrentFare;\n    NonOperativo = 0;\n    Pranzo = 0;    \n}else {\n    NonOperativo = kw;\n    NonOperativoCost = kw * CurrentFare;\n}\n\n// Calcolo Tipologia Carico\nif (kw>=500 && kw<=600) {\n    LowCharge = kw;\n    LowChargeCost = kw * CurrentFare;\n    NormalCharge = 0;\n    HighCharge = 0;\n}else if (kw>=601 && kw<=1300) {\n    LowCharge = 0;\n    NormalCharge = kw;\n    NormalChargeCost = kw * CurrentFare;\n    HighCharge = 0;\n}else if (kw>=1301 && kw<=1800) {\n    LowCharge = 0;\n    NormalCharge = 0;\n    HighCharge = kw;\n    HighChargeCost = kw * CurrentFare;\n}\n\n\nvar msg = { \n            kw: kw,\n            pf: pf,\n            fare: CurrentFare,\n            tariffa1: Tariffa1,\n            tariffa2: Tariffa2,\n            tariffa3: Tariffa3,\n            importo: Importo,\n            operativo: Operativo,\n            operativocost: OperativoCost,\n            pranzo: Pranzo,\n            pranzocost: PranzoCost,\n            nonoperativo: NonOperativo,\n            nonoperativocost: NonOperativoCost,\n            lowcharge: LowCharge,\n            lowchargecost: LowChargeCost,\n            normalcharge: NormalCharge,\n            normalchargecost: NormalChargeCost,\n            highcharge: HighCharge,        \n            highchargecost: HighChargeCost,\n            \n\n};\n\n\nreturn { msg: msg, metadata: metadata, msgType: msgType };",
        "queueName" : "Main",
        "originatorId" : "ebb79200-0831-11ee-bd5f-9374f67afc66",
        "originatorType" : "DEVICE"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : true,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "5fe88910-f41c-11ed-9a4b-e3fd271b8b84"
      },
      "name" : "EnergyConsumerRule",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.debug.TbMsgGeneratorNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 426,
        "layoutY" : 266
      },
      "configuration" : {
        "ruleChainId" : "a8a64db0-bd83-11ed-b0b2-3d060a5456ec"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "227fe340-f424-11ed-9a4b-e3fd271b8b84"
      },
      "name" : "timeseries",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.flow.TbRuleChainInputNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 423,
        "layoutY" : 366
      },
      "configuration" : {
        "topicPattern" : "topic/test",
        "host" : "broker.aangstrom.it",
        "port" : 1883,
        "connectTimeoutSec" : 10,
        "clientId" : "energy_consumer",
        "appendClientIdSuffix" : false,
        "cleanSession" : true,
        "retainedMessage" : false,
        "ssl" : false,
        "credentials" : {
          "type" : "basic",
          "username" : "tbmq_dev",
          "password" : "tbmq_dev"
        }
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : true,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "1a6c62b0-6e94-11ee-ad91-9bb47870629b"
      },
      "name" : "mqtt_th",
      "ruleChainId" : null,
      "singletonMode" : true,
      "type" : "org.thingsboard.rule.engine.mqtt.TbMqttNode"
    } ],
    "ruleChainConnections" : null
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}