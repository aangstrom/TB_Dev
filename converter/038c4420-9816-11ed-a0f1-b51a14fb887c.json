{
  "entityType" : "CONVERTER",
  "entity" : {
    "additionalInfo" : {
      "description" : ""
    },
    "configuration" : {
      "scriptLang" : "TBEL",
      "decoder" : "/** Decoder **/\n\n// decode payload to string\nvar data = decodeToString(payload);\n\n// deviceName\nvar deviceName =  metadata.topic.split(\"/\")[1];\n\n// pattern\nvar patterncar = 'frigate/'+deviceName+'/car';\nvar patternperson = 'frigate/'+deviceName+'/person';\nvar patternbicycle = 'frigate/'+deviceName+'/bicycle';\nvar patterncarsnapshot = 'frigate/'+deviceName+'/car/snapshot';\nvar patternpersonsnapshot = 'frigate/'+deviceName+'/person/snapshot';\nvar patternbicyclesnapshot = 'frigate/'+deviceName+'/bicycle/snapshot';\n\nswitch (metadata.topic) {\n    case patterncar:\n        var car = data;\n        break;\n    case patternperson:\n        var person = data;\n        break;\n    case patternbicycle:\n        var bicycle = data;\n        break;\n    case patterncarsnapshot:\n        var carsnapshot = payload;\n        break;\n    case patternpersonsnapshot:\n        var personsnapshot = payload;\n        break;\n    case patternbicyclesnapshot:\n        var bicyclesnapshot = payload;\n        break;\n    default:\n}\n\nvar deviceType = 'sensor';\n\n// Result object with device attributes/telemetry data\nvar result = {\n    deviceName: deviceName,\n    deviceType: deviceType,\n    telemetry: {\n       car: car,\n       person: person,\n       bicycle: bicycle,\n       carsnapshot: carsnapshot,\n       personsnapshot: personsnapshot,\n       bicyclesnapshot: bicyclesnapshot\n   }\n};\n\n/** Helper functions **/\n\nfunction decodeToString(payload) {\n   return String.fromCharCode.apply(String, payload);\n}\n\nfunction decodeToJson(payload) {\n   // convert payload to string.\n   var str = decodeToString(payload);\n\n   // parse string to JSON\n   var data = JSON.parse(str);\n   return data;\n}\n\n\n\nreturn result;",
      "tbelDecoder" : "/** Decoder **/\n\n// decode payload to string\nvar data = decodeToString(payload);\nvar img = bytesToBase64(payload);\nvar json= decodeToJson(payload);\n// var decalration\nvar deviceName;\nvar deviceType = 'sensor';\nvar car;\nvar person;\nvar bicycle;\nvar carsnapshot;\nvar personsnapshot;\nvar bicyclesnapshot;\nvar zone_0;\nvar zone_1;\nvar zone_2;\nvar t;\nvar result;\nvar before_id;\nvar before_frame_time;\nvar before_snapshot_time;\nvar before_label;\nvar before_sub_label;\nvar before_top_score;\nvar before_false_positive;\nvar before_start_time;\nvar before_end_time;\nvar before_score;\nvar before_box;\nvar before_area;\nvar before_ratio;\nvar before_region;\nvar before_stationary;\nvar before_motionless_count;\nvar before_position_changes;\nvar before_current_zones;\nvar before_entered_zones;\nvar before_has_clip;\nvar after_id;\nvar after_frame_time;\nvar after_snapshot_time;\nvar after_label;\nvar after_sub_label;\nvar after_top_score;\nvar after_false_positive;\nvar after_start_time;\nvar after_end_time;\nvar after_score;\nvar after_box;\nvar after_area;\nvar after_ratio;\nvar after_region;\nvar after_stationary;\nvar after_motionless_count;\nvar after_position_changes;\nvar after_current_zones;\nvar after_entered_zones;\nvar after_has_clip;\nvar type;\nvar boxtrackx;\nvar boxtracky;\n\nvar tempDevice=metadata.topic.split(\"/\")[1];\nif(tempDevice==\"events\"){\n    deviceName=json.before.camera;\n    before_id= json.before['id'];\n    before_frame_time= json.before.frame_time;\n    before_snapshot_time= json.before.snapshot_time;\n    before_label= json.before.label;\n    before_sub_label= json.before.sub_label;\n    before_top_score= json.before.top_score;\n    before_false_positive= json.before.false_positive;\n    before_start_time= json.before.start_time;\n    before_end_time= json.before.end_time;\n    before_score= json.before.score;\n    before_box= json.before.box;\n    before_area= json.before.area;\n    before_ratio= json.before.ratio;\n    before_region= json.before.region;\n    before_stationary= json.before.stationary;\n    before_motionless_count= json.before.motionless_count;\n    before_position_changes= json.before.position_changes;\n    before_current_zones= json.before.current_zones;\n    before_entered_zones= json.before.entered_zones;\n    before_has_clip= json.before.has_clip;\n    after_id= json.after['id'];\n    after_frame_time= json.after.frame_time;\n    after_snapshot_time= json.after.snapshot_time;\n    after_label= json.after.label;\n    after_sub_label= json.after.sub_label;\n    after_top_score= json.after.top_score;\n    after_false_positive= json.after.false_positive;\n    after_start_time= json.after.start_time;\n    after_end_time= json.after.end_time;\n    after_score= json.after.score;\n    after_box= json.after.box;\n    after_area= json.after.area;\n    after_ratio= json.after.ratio;\n    after_region= json.after.region;\n    after_stationary= json.after.stationary;\n    after_motionless_count= json.after.motionless_count;\n    after_position_changes= json.after.position_changes;\n    after_current_zones= json.after.current_zones;\n    after_entered_zones= json.after.entered_zones;\n    after_has_clip= json.after.has_clip;\n    type= json.type;\n    boxtrackx= before_box[0]; // - before_box[1];\n    boxtracky= before_box[3];\n} else {\n    if(tempDevice==\"zone_0\" || tempDevice==\"zone_1\" || tempDevice==\"zone_2\"){\n        deviceName = \"market\";\n    }else{\n        deviceName = tempDevice;\n    }\n    car = null;\n    person = null;\n    bicycle = null;\n    carsnapshot = null;\n    personsnapshot = null;\n    bicyclesnapshot = null;\n    zone_0 = null;\n    zone_1 = null;\n    zone_2 = null;\n    t = metadata.topic;\n    \n    // pattern\n    var patterncar = 'frigate/'+deviceName+'/car';\n    var patternperson = 'frigate/'+deviceName+'/person';\n    var patternbicycle = 'frigate/'+deviceName+'/bicycle';\n    var patterncarsnapshot = 'frigate/'+deviceName+'/car/snapshot';\n    var patternpersonsnapshot = 'frigate/'+deviceName+'/person/snapshot';\n    var patternbicyclesnapshot = 'frigate/'+deviceName+'/bicycle/snapshot';\n    \n    if(t==patterncar){\n        car = data;\n    } else if(t==patternperson){\n        person = data;\n    } else if(t==patternbicycle){\n        bicycle = data;\n    } else if(t==patterncarsnapshot){\n        carsnapshot = img;\n    } else if(t==patternpersonsnapshot){\n        personsnapshot = img;\n    } else if(t==patternbicyclesnapshot){\n        bicyclesnapshot = img;\n    }\n    if(tempDevice==\"zone_0\"){\n            zone_0=data;\n    } else if(tempDevice==\"zone_1\"){\n        zone_1=data;\n    } else if(tempDevice==\"zone_2\"){\n        zone_2=data;\n    }\n}\n\nif(deviceName===\"restart\" || deviceName===\"events\" || deviceName==\"available\" || deviceName==\"stats\"){\n    result=null;\n} else {\n    result = {\n       deviceName: deviceName,\n       deviceType: deviceType,\n       telemetry: {\n           car: car,\n           person: person,\n           bicycle: bicycle,\n           carsnapshot: carsnapshot,\n           personsnapshot: personsnapshot,\n           bicyclesnapshot: bicyclesnapshot,\n           zone_0: zone_0,\n           zone_1: zone_1,\n           zone_2: zone_2,\n           before_id: before_id,\n           before_frame_time: before_frame_time,\n           before_snapshot_time: before_snapshot_time,\n           before_label: before_label,\n           before_sub_label: before_sub_label,\n           before_top_score: before_top_score,\n           before_false_positive: before_false_positive,\n           before_start_time: before_start_time,\n           before_end_time: before_end_time,\n           before_score: before_score,\n           before_box: before_box,\n           before_area: before_area,\n           before_ratio: before_ratio,\n           before_region: before_region,\n           before_stationary: before_stationary,\n           before_motionless_count: before_motionless_count,\n           before_position_changes: before_position_changes,\n           before_current_zones: before_current_zones,\n           before_entered_zones: before_entered_zones,\n           before_has_clip: before_has_clip,\n           after_id: after_id,\n           after_frame_time: after_frame_time,\n           after_snapshot_time: after_snapshot_time,\n           after_label: after_label,\n           after_sub_label: after_sub_label,\n           after_top_score: after_top_score,\n           after_false_positive: after_false_positive,\n           after_start_time: after_start_time,\n           after_end_time: after_end_time,\n           after_score: after_score,\n           after_box: after_box,\n           after_area: after_area,\n           after_ratio: after_ratio,\n           after_region: after_region,\n           after_stationary: after_stationary,\n           after_motionless_count: after_motionless_count,\n           after_position_changes: after_position_changes,\n           after_current_zones: after_current_zones,\n           after_entered_zones: after_entered_zones,\n           after_has_clip: after_has_clip,\n           type: type,\n           boxtrackx: boxtrackx,\n           boxtracky: boxtracky\n       }\n    };\n}\n\n\n/** Helper functions **/\n\nfunction decodeToString(payload) {\n   return String.fromCharCode.apply(String, payload);\n}\n\nreturn result;",
      "encoder" : null,
      "tbelEncoder" : null
    },
    "debugMode" : true,
    "edgeTemplate" : false,
    "externalId" : null,
    "id" : {
      "entityType" : "CONVERTER",
      "id" : "038c4420-9816-11ed-a0f1-b51a14fb887c"
    },
    "name" : "Frigate",
    "type" : "UPLINK"
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}