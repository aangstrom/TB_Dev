{
  "entityType" : "CONVERTER",
  "entity" : {
    "additionalInfo" : {
      "description" : ""
    },
    "configuration" : {
      "scriptLang" : "TBEL",
      "decoder" : "var data = decodeToJson(payload);\r\nvar deviceName = data.end_device_ids.device_id;\r\nvar deviceType = data.end_device_ids.application_ids.application_id;\r\n\r\nvar result = {\r\n    deviceName: deviceName,\r\n    deviceType: deviceType,\r\n    telemetry: {\r\n         temperature: data.uplink_message.decoded_payload.temperature,\r\n         humidity: data.uplink_message.decoded_payload.humidity,\r\n         light: data.uplink_message.decoded_payload.light,\r\n         motion: data.uplink_message.decoded_payload.motion,\r\n         soundAvg: data.uplink_message.decoded_payload.soundAvg,\r\n         soundPeak: data.uplink_message.decoded_payload.soundPeak,\r\n         vdd: data.uplink_message.decoded_payload.vdd,\r\n         pressEvent: data.uplink_message.decoded_payload.pressEvent,\r\n         batteryVoltage: data.uplink_message.decoded_payload.batteryVoltage,\r\n         thermistorProperlyConnected: data.uplink_message.decoded_payload.thermistorProperlyConnected,\r\n         dev_latitude: data.uplink_message.rx_metadata[0].location.latitude,\r\n         dev_longitude: data.uplink_message.rx_metadata[0].location.longitude\r\n    }\r\n};\r\n\r\nfunction decodeToString(payload) {\r\n    return String.fromCharCode.apply(String, payload);\r\n}\r\n\r\nfunction decodeToJson(payload) {\r\n    var str = decodeToString(payload);\r\n    var data = JSON.parse(str);\r\n    return data;\r\n}\r\n\r\nreturn result;",
      "tbelDecoder" : "var data = decodeToJson(payload);\r\nvar deviceName = data.end_device_ids.device_id;\r\nvar deviceType = data.end_device_ids.application_ids.application_id;\r\nvar light;\r\nif(data.uplink_message.decoded_payload.light!=null){\r\n    light=data.uplink_message.decoded_payload.light;\r\n}\r\nif(data.uplink_message.decoded_payload.light_level!=null){\r\n    light=data.uplink_message.decoded_payload.light_level;\r\n}\r\n\r\nvar result = {\r\n    deviceName: deviceName,\r\n    deviceType: deviceType,\r\n    attributes: {\r\n    },\r\n    telemetry: {\r\n        temperature: data.uplink_message.decoded_payload.temperature,\r\n        humidity: data.uplink_message.decoded_payload.humidity,\r\n        light: light,\r\n        motion: data.uplink_message.decoded_payload.motion,\r\n        soundAvg: data.uplink_message.decoded_payload.soundAvg,\r\n        soundPeak: data.uplink_message.decoded_payload.soundPeak,\r\n        vdd: data.uplink_message.decoded_payload.vdd,\r\n        pressEvent: data.uplink_message.decoded_payload.pressEvent,\r\n        batteryVoltage: data.uplink_message.decoded_payload.batteryVoltage,\r\n        co2: data.uplink_message.decoded_payload.co2,\r\n        formaldeide: data.uplink_message.decoded_payload.hcho,\r\n        pir: data.uplink_message.decoded_payload.pir,\r\n        pm10: data.uplink_message.decoded_payload.pm10,\r\n        pm2_5: data.uplink_message.decoded_payload.pm2_5,\r\n        pressure: data.uplink_message.decoded_payload.pressure,\r\n        tvoc: data.uplink_message.decoded_payload.tvoc,\r\n        thermistorProperlyConnected: data.uplink_message.decoded_payload.thermistorProperlyConnected,\r\n    }\r\n};\r\n\r\nfunction decodeToString(payload) {\r\n    return String.fromCharCode.apply(String, payload);\r\n}\r\n\r\nfunction decodeToJson(payload) {\r\n    var str = decodeToString(payload);\r\n    var data = JSON.parse(str);\r\n    return data;\r\n}\r\n\r\nreturn result;",
      "encoder" : null
    },
    "debugMode" : false,
    "edgeTemplate" : false,
    "externalId" : null,
    "id" : {
      "entityType" : "CONVERTER",
      "id" : "ce892b10-126b-11ed-91ed-0903699d62f6"
    },
    "name" : "ttn_uplink_converter",
    "type" : "UPLINK"
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}