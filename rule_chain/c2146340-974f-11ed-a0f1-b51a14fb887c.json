{
  "entityType" : "RULE_CHAIN",
  "entity" : {
    "additionalInfo" : {
      "description" : ""
    },
    "configuration" : null,
    "createdTime" : 1674060433268,
    "debugMode" : false,
    "externalId" : null,
    "firstRuleNodeId" : {
      "entityType" : "RULE_NODE",
      "id" : "c2268bb0-974f-11ed-a0f1-b51a14fb887c"
    },
    "id" : {
      "entityType" : "RULE_CHAIN",
      "id" : "c2146340-974f-11ed-a0f1-b51a14fb887c"
    },
    "name" : "Smart Office",
    "root" : false,
    "tenantId" : null,
    "type" : "CORE"
  },
  "metaData" : {
    "connections" : [ {
      "fromIndex" : 2,
      "toIndex" : 0,
      "type" : "Post telemetry"
    }, {
      "fromIndex" : 2,
      "toIndex" : 1,
      "type" : "Post attributes"
    }, {
      "fromIndex" : 2,
      "toIndex" : 3,
      "type" : "RPC Request from Device"
    }, {
      "fromIndex" : 2,
      "toIndex" : 4,
      "type" : "Other"
    }, {
      "fromIndex" : 2,
      "toIndex" : 5,
      "type" : "RPC Request to Device"
    }, {
      "fromIndex" : 2,
      "toIndex" : 10,
      "type" : "Generate Report"
    }, {
      "fromIndex" : 2,
      "toIndex" : 11,
      "type" : "RPC Request to Device"
    }, {
      "fromIndex" : 6,
      "toIndex" : 2,
      "type" : "False"
    }, {
      "fromIndex" : 6,
      "toIndex" : 7,
      "type" : "True"
    }, {
      "fromIndex" : 7,
      "toIndex" : 2,
      "type" : "False"
    }, {
      "fromIndex" : 7,
      "toIndex" : 8,
      "type" : "True"
    }, {
      "fromIndex" : 8,
      "toIndex" : 2,
      "type" : "Success"
    }, {
      "fromIndex" : 9,
      "toIndex" : 6,
      "type" : "Success"
    }, {
      "fromIndex" : 12,
      "toIndex" : 9,
      "type" : "Success"
    }, {
      "fromIndex" : 14,
      "toIndex" : 9,
      "type" : "Success"
    }, {
      "fromIndex" : 15,
      "toIndex" : 9,
      "type" : "Success"
    } ],
    "firstNodeIndex" : 9,
    "nodes" : [ {
      "additionalInfo" : {
        "description" : null,
        "layoutX" : 1201,
        "layoutY" : 253
      },
      "configuration" : {
        "defaultTTL" : 0
      },
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "c21e7560-974f-11ed-a0f1-b51a14fb887c"
      },
      "name" : "Save Timeseries",
      "ruleChainId" : null,
      "type" : "org.thingsboard.rule.engine.telemetry.TbMsgTimeseriesNode"
    }, {
      "additionalInfo" : {
        "layoutX" : 1202,
        "layoutY" : 149
      },
      "configuration" : {
        "scope" : "CLIENT_SCOPE",
        "notifyDevice" : "false"
      },
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "c2204a20-974f-11ed-a0f1-b51a14fb887c"
      },
      "name" : "Save Attributes",
      "ruleChainId" : null,
      "type" : "org.thingsboard.rule.engine.telemetry.TbMsgAttributesNode"
    }, {
      "additionalInfo" : {
        "description" : null,
        "layoutX" : 768,
        "layoutY" : 284
      },
      "configuration" : {
        "version" : 0
      },
      "createdTime" : 0,
      "debugMode" : true,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "c220bf50-974f-11ed-a0f1-b51a14fb887c"
      },
      "name" : "Message Type Switch",
      "ruleChainId" : null,
      "type" : "org.thingsboard.rule.engine.filter.TbMsgTypeSwitchNode"
    }, {
      "additionalInfo" : {
        "layoutX" : 1202,
        "layoutY" : 363
      },
      "configuration" : {
        "jsScript" : "return '\\nIncoming message:\\n' + JSON.stringify(msg) + '\\nIncoming metadata:\\n' + JSON.stringify(metadata);"
      },
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "c2221ee0-974f-11ed-a0f1-b51a14fb887c"
      },
      "name" : "Log RPC from Device",
      "ruleChainId" : null,
      "type" : "org.thingsboard.rule.engine.action.TbLogNode"
    }, {
      "additionalInfo" : {
        "layoutX" : 1202,
        "layoutY" : 476
      },
      "configuration" : {
        "jsScript" : "return '\\nIncoming message:\\n' + JSON.stringify(msg) + '\\nIncoming metadata:\\n' + JSON.stringify(metadata);"
      },
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "c2229410-974f-11ed-a0f1-b51a14fb887c"
      },
      "name" : "Log Other",
      "ruleChainId" : null,
      "type" : "org.thingsboard.rule.engine.action.TbLogNode"
    }, {
      "additionalInfo" : {
        "description" : null,
        "layoutX" : 1214,
        "layoutY" : 648
      },
      "configuration" : {
        "timeoutInSeconds" : 60
      },
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "c223cc90-974f-11ed-a0f1-b51a14fb887c"
      },
      "name" : "RPC Call Request",
      "ruleChainId" : null,
      "type" : "org.thingsboard.rule.engine.rpc.TbSendRPCRequestNode"
    }, {
      "additionalInfo" : {
        "layoutX" : 457,
        "layoutY" : 283
      },
      "configuration" : {
        "originatorTypes" : [ "ENTITY_GROUP" ]
      },
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "c2248fe0-974f-11ed-a0f1-b51a14fb887c"
      },
      "name" : "Is Entity Group",
      "ruleChainId" : null,
      "type" : "org.thingsboard.rule.engine.filter.TbOriginatorTypeFilterNode"
    }, {
      "additionalInfo" : {
        "layoutX" : 521,
        "layoutY" : 91
      },
      "configuration" : {
        "messageTypes" : [ "POST_ATTRIBUTES_REQUEST", "RPC_CALL_FROM_SERVER_TO_DEVICE" ]
      },
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "c225a150-974f-11ed-a0f1-b51a14fb887c"
      },
      "name" : "Post attributes or RPC request",
      "ruleChainId" : null,
      "type" : "org.thingsboard.rule.engine.filter.TbMsgTypeFilterNode"
    }, {
      "additionalInfo" : {
        "layoutX" : 829,
        "layoutY" : 90
      },
      "configuration" : {
        "entityGroupId" : null,
        "entityGroupIsMessageOriginator" : true
      },
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "c225ef70-974f-11ed-a0f1-b51a14fb887c"
      },
      "name" : "Duplicate To Group Entities",
      "ruleChainId" : null,
      "type" : "org.thingsboard.rule.engine.transform.TbDuplicateMsgToGroupNode"
    }, {
      "additionalInfo" : {
        "description" : "Process incoming messages from devices with the alarm rules defined in the device profile. Dispatch all incoming messages with \"Success\" relation type.",
        "layoutX" : 349,
        "layoutY" : 454
      },
      "configuration" : {
        "persistAlarmRulesState" : false,
        "fetchAlarmRulesStateOnStart" : false
      },
      "createdTime" : 0,
      "debugMode" : true,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "c2268bb0-974f-11ed-a0f1-b51a14fb887c"
      },
      "name" : "Device Profile Node",
      "ruleChainId" : null,
      "type" : "org.thingsboard.rule.engine.profile.TbDeviceProfileNode"
    }, {
      "additionalInfo" : {
        "description" : "Forwards message to the \"Generate Report\" rule chain",
        "layoutX" : 1216,
        "layoutY" : 731
      },
      "configuration" : {
        "ruleChainId" : "7c655170-01d5-11ed-8014-35af6f7ed6b6"
      },
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "c22700e0-974f-11ed-a0f1-b51a14fb887c"
      },
      "name" : "Generate Report",
      "ruleChainId" : null,
      "type" : "org.thingsboard.rule.engine.flow.TbRuleChainInputNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1212,
        "layoutY" : 567
      },
      "configuration" : {
        "ruleChainId" : "fa3689a0-3f5d-11ed-accb-016e0c746b7f"
      },
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "c2277610-974f-11ed-a0f1-b51a14fb887c"
      },
      "name" : "Process RPC Reply",
      "ruleChainId" : null,
      "type" : "org.thingsboard.rule.engine.flow.TbRuleChainInputNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 75,
        "layoutY" : 619
      },
      "configuration" : {
        "msgCount" : 0,
        "periodInSeconds" : 30,
        "scriptLang" : "JS",
        "jsScript" : "var d = new Date();\nvar hour = d.getHours();\nvar occupancy;\nswitch(hour) {\n  case 8:\n  case 9:\n  case 10:\n  case 11:\n  case 12:\n  case 13:\n  case 14:\n  case 15:\n  case 16:\n  case 17:\n    occupancy = Math.random() < 0.8;\n    occupancy = Math.round( occupancy * 100 ) / 100;\n    break;\n  default:\n    occupancy = Math.random() < 0.1;\n    occupancy = Math.round( occupancy * 100 ) / 100;\n}\nvar temperature = 18 + Math.random() * (32 - 18);\ntemperature = Math.round( temperature * 100 ) / 100;\nvar humidity = 10 + Math.random() * (90 - 10);\nhumidity = Math.round( humidity * 100 ) / 100;\nvar co2 = 150 + Math.random() * (300 - 0);\nco2 = Math.round( co2 * 100 ) / 100;\nvar tvoc = Math.random() * (2000 - 0);\ntvoc = Math.round( tvoc * 100 ) / 100;\nvar msg = { \n            co2: co2,\n            occupancy: occupancy,\n            temperature: temperature,\n            humidity: humidity,\n            tvoc: tvoc\n};\nreturn { msg: msg, metadata: {}, msgType: \"POST_TELEMETRY_REQUEST\" };\n",
        "tbelScript" : "var msg = { temp: 42, humidity: 77 };\nvar metadata = { data: 40 };\nvar msgType = \"POST_TELEMETRY_REQUEST\";\n\nreturn { msg: msg, metadata: metadata, msgType: msgType };",
        "originatorId" : "f00ceb70-32a3-11ed-accb-016e0c746b7f",
        "originatorType" : "DEVICE"
      },
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "14c62060-9750-11ed-a0f1-b51a14fb887c"
      },
      "name" : "Smart sensor",
      "ruleChainId" : null,
      "type" : "org.thingsboard.rule.engine.debug.TbMsgGeneratorNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 75,
        "layoutY" : 673
      },
      "configuration" : {
        "msgCount" : 0,
        "periodInSeconds" : 30,
        "scriptLang" : "JS",
        "jsScript" : "/*var msg = { temp: 42, humidity: 77 };\nvar metadata = { data: 40 };\nvar msgType = \"POST_TELEMETRY_REQUEST\";\nreturn { msg: msg, metadata: metadata, msgType: msgType };\n*/\nvar temp = 942.9;\n//var temp = prevMsg.energy;\nvar d = new Date();\nvar hour = d.getHours();\nvar water, voltage;\nswitch(hour) {\n  case 8:\n  case 9:\n  case 10:\n  case 11:\n  case 15:\n  case 16:\n  case 17:\n  case 18:\n    water = (Math.random() * (10 - 0) + 0).toFixed(2);\n    voltage = (Math.random() * (10 - 0) + 0).toFixed(2);\n    break;\n  case 12:\n  case 13:\n  case 14:\n    water = (Math.random() * (20 - 0) + 0).toFixed(2);\n    voltage = (Math.random() * (20 - 0) + 0).toFixed(2);\n    break;\n  default:\n    water = null;\n    voltage = null;\n}\nvar msg = {\n    water: water,\n    voltage: voltage\n};\nvar metadata = {};\nvar msgType = \"POST_TELEMETRY_REQUEST\";\n\nreturn { msg: msg, metadata: metadata, msgType: msgType };",
        "tbelScript" : "/*var msg = { temp: 42, humidity: 77 };\nvar metadata = { data: 40 };\nvar msgType = \"POST_TELEMETRY_REQUEST\";\nreturn { msg: msg, metadata: metadata, msgType: msgType };\n*/\nvar temp = 942.9;\n//var temp = prevMsg.energy;\nvar d = new Date();\nvar hour = d.getHours();\nvar amperage, energy, frequency, power, voltage;\nswitch(hour) {\n  case 8:\n    amperage = 10 + (Math.random() * (5 - 0) + 0).toFixed(1);\n    frequency = 10;\n    power = 2500 + (Math.random() * (1000 - 0) + 0).toFixed(2);\n    energy = temp + power;\n    voltage = 200 + (Math.random() * (30 - 0) + 0).toFixed(2);\n    break;\n  case 9:\n    amperage = 10 + (Math.random() * (5 - 0) + 0).toFixed(1);\n    frequency = 10;\n    power = 2500 + (Math.random() * (1000 - 0) + 0).toFixed(2);\n    energy = temp + power;\n    voltage = 200 + (Math.random() * (30 - 0) + 0).toFixed(2);\n    break;\n  case 10:\n    amperage = 10 + (Math.random() * (5 - 0) + 0).toFixed(1);\n    frequency = 10;\n    power = 2500 + (Math.random() * (1000 - 0) + 0).toFixed(2);\n    energy = temp + power;\n    voltage = 200 + (Math.random() * (30 - 0) + 0).toFixed(2);\n    break;\n  case 11:\n    amperage = 10 + (Math.random() * (5 - 0) + 0).toFixed(1);\n    frequency = 10;\n    power = 2500 + (Math.random() * (1000 - 0) + 0).toFixed(2);\n    energy = temp + power;\n    voltage = 200 + (Math.random() * (30 - 0) + 0).toFixed(2);\n    break;\n  case 12:\n    amperage = 10 + (Math.random() * (5 - 0) + 0).toFixed(1);\n    frequency = 10;\n    power = 2500 + (Math.random() * (1000 - 0) + 0).toFixed(2);\n    energy = temp + power;\n    voltage = 200 + (Math.random() * (30 - 0) + 0).toFixed(2);\n    break;\n  case 14:\n    amperage = 10 + (Math.random() * (5 - 0) + 0).toFixed(1);\n    frequency = 10;\n    power = 2500 + (Math.random() * (1000 - 0) + 0).toFixed(2);\n    energy = temp + power;\n    voltage = 200 + (Math.random() * (30 - 0) + 0).toFixed(2);\n    break;\n  case 15:\n    amperage = 10 + (Math.random() * (5 - 0) + 0).toFixed(1);\n    frequency = 10;\n    power = 2500 + (Math.random() * (1000 - 0) + 0).toFixed(2);\n    energy = temp + power;\n    voltage = 200 + (Math.random() * (30 - 0) + 0).toFixed(2);\n    break;\n  case 16:\n    amperage = 10 + (Math.random() * (5 - 0) + 0).toFixed(1);\n    frequency = 10;\n    power = 2500 + (Math.random() * (1000 - 0) + 0).toFixed(2);\n    energy = temp + power;\n    voltage = 200 + (Math.random() * (30 - 0) + 0).toFixed(2);\n    break;\n  case 17:\n    amperage = 10 + (Math.random() * (5 - 0) + 0).toFixed(1);\n    frequency = 10;\n    power = 2500 + (Math.random() * (1000 - 0) + 0).toFixed(2);\n    energy = temp + power;\n    voltage = 200 + (Math.random() * (30 - 0) + 0).toFixed(2);\n    break;\n  default:\n    amperage = 0.1 + (Math.random() * (0.1 - 0) + 0).toFixed(1);\n    frequency = 10;\n    power = null;\n    energy = temp;\n    voltage = 0.5;\n}\nvar msg = {\n    amperage: amperage,\n    energy: energy,\n    frequency: frequency,\n    power: power,\n    voltage: voltage\n};\nvar metadata = {};\nvar msgType = \"POST_TELEMETRY_REQUEST\";\n\nreturn { msg: msg, metadata: metadata, msgType: msgType };",
        "originatorId" : "f011f480-32a3-11ed-accb-016e0c746b7f",
        "originatorType" : "DEVICE"
      },
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "14c66e80-9750-11ed-a0f1-b51a14fb887c"
      },
      "name" : "HVAC",
      "ruleChainId" : null,
      "type" : "org.thingsboard.rule.engine.debug.TbMsgGeneratorNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 75,
        "layoutY" : 517
      },
      "configuration" : {
        "msgCount" : 0,
        "periodInSeconds" : 30,
        "scriptLang" : "JS",
        "jsScript" : "var d = new Date();\nvar hour = d.getHours();\nvar water, voltage;\nswitch(hour) {\n  case 8:\n  case 9:\n  case 10:\n  case 11:\n  case 15:\n  case 16:\n  case 17:\n  case 18:\n    water = (Math.random() * (10 - 0) + 0).toFixed(2);\n    voltage = (Math.random() * (10 - 0) + 0).toFixed(2);\n    break;\n  case 12:\n  case 13:\n  case 14:\n    water = (Math.random() * (20 - 0) + 0).toFixed(2);\n    voltage = (Math.random() * (20 - 0) + 0).toFixed(2);\n    break;\n  default:\n    water = null;\n    voltage = null;\n}\nwater = Math.round( water * 100 ) / 100;\nvoltage = Math.round( voltage * 100 ) / 100;\nvar msg = {\n    water: water,\n    voltage: voltage\n};\nvar metadata = {};\nvar msgType = \"POST_TELEMETRY_REQUEST\";\n\nreturn { msg: msg, metadata: metadata, msgType: msgType };",
        "tbelScript" : "var msg = { temp: 42, humidity: 77 };\nvar metadata = { data: 40 };\nvar msgType = \"POST_TELEMETRY_REQUEST\";\n\nreturn { msg: msg, metadata: metadata, msgType: msgType };",
        "originatorId" : "f018f960-32a3-11ed-accb-016e0c746b7f",
        "originatorType" : "DEVICE"
      },
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "14c6bca0-9750-11ed-a0f1-b51a14fb887c"
      },
      "name" : "Water meter",
      "ruleChainId" : null,
      "type" : "org.thingsboard.rule.engine.debug.TbMsgGeneratorNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 74,
        "layoutY" : 567
      },
      "configuration" : {
        "msgCount" : 0,
        "periodInSeconds" : 30,
        "scriptLang" : "JS",
        "jsScript" : "var temp = 942.9;\n//var temp = prevMsg.energy;\nvar d = new Date();\nvar hour = d.getHours();\nvar amperage, energy, frequency, power, voltage;\nswitch(hour) {\n  case 8:\n  case 9:\n  case 10:\n  case 11:\n  case 12:\n  case 13:\n  case 14:\n  case 15:\n  case 16:\n  case 17:\n    amperage = (Math.random() * (5 - 0) + 10).toFixed(1);\n    frequency = (Math.random() * (50 - 0) + 10).toFixed(1);\n    power = Math.random() * (1000 - 0) + 0;\n    power = Math.round( power * 100 ) / 100;\n    energy = (temp + power).toFixed(2);\n    voltage = (Math.random() * (30 - 0) + 200).toFixed(2);\n    break;\n  default:\n    amperage = 0.1 + (Math.random() * (0.1 - 0) + 0).toFixed(1);\n    frequency = 10;\n    power = null;\n    energy = temp;\n    voltage = 0.5;\n}\namperage = Math.round( amperage * 100 ) / 100;\nfrequency = Math.round( frequency * 100 ) / 100;\nvoltage = Math.round( voltage * 100 ) / 100;\nenergy = Math.round( energy * 100 ) / 100;\nvar msg = {\n    amperage: amperage,\n    energy: energy,\n    frequency: frequency,\n    power: power,\n    voltage: voltage\n};\nvar metadata = {};\nvar msgType = \"POST_TELEMETRY_REQUEST\";\n\nreturn { msg: msg, metadata: metadata, msgType: msgType };",
        "tbelScript" : "var msg = { temp: 42, humidity: 77 };\nvar metadata = { data: 40 };\nvar msgType = \"POST_TELEMETRY_REQUEST\";\n\nreturn { msg: msg, metadata: metadata, msgType: msgType };",
        "originatorId" : "f0161330-32a3-11ed-accb-016e0c746b7f",
        "originatorType" : "DEVICE"
      },
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "14c731d0-9750-11ed-a0f1-b51a14fb887c"
      },
      "name" : "Energy meter",
      "ruleChainId" : null,
      "type" : "org.thingsboard.rule.engine.debug.TbMsgGeneratorNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 430,
        "layoutY" : 644
      },
      "configuration" : {
        "scriptLang" : "JS",
        "jsScript" : "var enabled;\nif (msg.method==\"setEnabled\"){\n    if(msg.params==\"false\"){\n        enabled = false;\n    }\n    else if(msg.params==\"true\"){\n        enabled = true;\n    }\n}\nelse {\n    \n}\nvar type = \"POST_TELEMETRY_REQUEST\";\nvar messaggio = {\n    enabled: enabled\n}\nreturn {msg: messaggio, metadata: metadata, msgType: type};",
        "tbelScript" : "return {msg: msg, metadata: metadata, msgType: msgType};"
      },
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "e0999ff0-97e6-11ed-a0f1-b51a14fb887c"
      },
      "name" : "Script rpc",
      "ruleChainId" : null,
      "type" : "org.thingsboard.rule.engine.transform.TbTransformMsgNode"
    } ],
    "ruleChainConnections" : null
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}