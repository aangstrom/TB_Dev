{
  "entityType" : "DASHBOARD",
  "entity" : {
    "assignedCustomers" : null,
    "configuration" : {
      "description" : "",
      "widgets" : {
        "0c9160c4-7d0a-7fb2-f6f6-c375746280a6" : {
          "typeFullFqn" : "system.cards.entities_hierarchy",
          "type" : "latest",
          "sizeX" : 7.5,
          "sizeY" : 3.5,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 86400000,
                "quickInterval" : "CURRENT_DAY"
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1725548962242,
                  "endTimeMs" : 1725635362242
                },
                "quickInterval" : "CURRENT_DAY"
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "nodeRelationQueryFunction" : "var entity = nodeCtx.entity;\nvar query = {\n    parameters: {\n        rootId: entity.id.id,\n        rootType: entity.id.entityType,\n        direction: \"TO\",\n        maxLevel: 1\n    },\n    filters: [{\n        relationType: \"Contains\",\n        entityTypes: [\"ASSET\", \"DEVICE\"]\n    }]\n};\nreturn query;\n\n/**\n\n// Function should return relations query object for current node used to fetch entity children.\n// Function can return 'default' string value. In this case default relations query will be used.\n\n// The following example code will construct simple relations query that will fetch relations of type 'Contains'\n// from the current entity.\n\nvar entity = nodeCtx.entity;\nvar query = {\n    parameters: {\n        rootId: entity.id.id,\n        rootType: entity.id.entityType,\n        direction: \"FROM\",\n        maxLevel: 1\n    },\n    filters: [{\n        relationType: \"Contains\",\n        entityTypes: []\n    }]\n};\nreturn query;\n\n**/\n",
              "nodeHasChildrenFunction" : "/**\n\n// Function should return boolean value indicating whether current node has children (whether it can be expanded).\n\n// The following example code will restrict entities hierarchy expansion up to third level.\n\nreturn nodeCtx.level <= 2;\n\n// The next example code will restrict entities expansion according to the value of example 'nodeHasChildren' attribute.\n\nvar data = nodeCtx.data;\nif (data.hasOwnProperty('nodeHasChildren') && data['nodeHasChildren'] !== null) {\n    return data['nodeHasChildren'] === 'true';\n} else {\n    return true;\n}\n  \n**/\n ",
              "nodeOpenedFunction" : "/**\n\n// Function should return boolean value indicating whether current node should be opened (expanded) when it first loaded.\n\n// The following example code will open by default nodes up to third level.\n\nreturn nodeCtx.level <= 2;\n\n**/\n ",
              "nodeDisabledFunction" : "/**\n\n// Function should return boolean value indicating whether current node should be disabled (not selectable).\n\n// The following example code will disable current node according to the value of example 'nodeDisabled' attribute.\n\nvar data = nodeCtx.data;\nif (data.hasOwnProperty('nodeDisabled') && data['nodeDisabled'] !== null) {\n    return data['nodeDisabled'] === 'true';\n} else {\n    return false;\n}\n  \n**/\n",
              "nodeIconFunction" : "/** \n\n// Function should return node icon info object.\n// Resulting object should contain either 'materialIcon' or 'iconUrl' property. \n// Where:\n    - 'materialIcon' - name of the material icon to be used from the Material Icons Library (https://material.io/tools/icons);\n    - 'iconUrl' - url of the external image to be used as node icon.\n// Function can return 'default' string value. In this case default icons according to entity type will be used.\n\n// The following example code shows how to use external image for devices which name starts with 'Test' and use \n// default icons for the rest of entities.\n\nvar entity = nodeCtx.entity;\nif (entity.id.entityType === 'DEVICE' && entity.name.startsWith('Test')) {\n    return {iconUrl: 'https://avatars1.githubusercontent.com/u/14793288?v=4&s=117'};\n} else {\n    return 'default';\n}\n \n**/",
              "nodeTextFunction" : "\n// Function should return text (can be HTML code) for the current node.\n\n// The following example code will generate node text consisting of entity name and temperature if temperature value is present in entity attributes/timeseries.\n\nvar data =  nodeCtx.data;\nvar entity = nodeCtx.entity;\nvar text = entity.name;\nif (data.hasOwnProperty('energy') && data['energy'] != null) {\n    text += \" <b>(\"+ (data['energy'] ? data['energy'].toFixed(2) : data['energy']) +\" kWh)</b>\";\n}\nreturn text;",
              "nodesSortFunction" : "/**\n\n// This function is used to sort nodes of the same level. Function should compare two nodes and return \n// integer value: \n//     - less than 0 - sort nodeCtx1 to an index lower than nodeCtx2\n//     - 0 - leave nodeCtx1 and nodeCtx2 unchanged with respect to each other\n//     - greater than 0 - sort nodeCtx2 to an index lower than nodeCtx1\n\n// The following example code will sort entities first by entity type in alphabetical order then\n// by entity name in alphabetical order.\n\nvar result = nodeCtx1.entity.id.entityType.localeCompare(nodeCtx2.entity.id.entityType);\nif (result === 0) {\n    result = nodeCtx1.entity.name.localeCompare(nodeCtx2.entity.name);\n}\nreturn result;\n  \n**/"
            },
            "title" : "Assets Hierarchy",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400,
              "padding" : "5px 10px 5px 10px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "name" : "",
              "entityAliasId" : "f6c3a823-2e17-e63f-fc06-07ea0aa28892",
              "dataKeys" : [ {
                "name" : "energy",
                "type" : "timeseries",
                "label" : "energy",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.646184201070817
              } ],
              "alarmFilterConfig" : {
                "statusList" : [ "ACTIVE" ]
              }
            } ],
            "widgetStyle" : {
              "border" : "1px solid rgba(203, 208, 221, 0.54)"
            },
            "actions" : {
              "nodeSelected" : [ {
                "name" : "Select",
                "icon" : "more_horiz",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "updateDashboardState",
                "targetDashboardStateId" : null,
                "setEntityId" : true,
                "stateEntityParamName" : "selectedNode",
                "openRightLayout" : false,
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "fa6d4119-30a1-fe8f-ff91-f04538d55175"
              } ]
            },
            "displayTimewindow" : true,
            "showTitleIcon" : false,
            "titleTooltip" : "",
            "enableDataExport" : false,
            "borderRadius" : "8px",
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : ""
          },
          "row" : 0,
          "col" : 0,
          "id" : "0c9160c4-7d0a-7fb2-f6f6-c375746280a6"
        },
        "1270c34a-f518-cc69-de13-dfc20a0876e5" : {
          "typeFullFqn" : "system.cards.markdown_card",
          "type" : "latest",
          "sizeX" : 5,
          "sizeY" : 3.5,
          "config" : {
            "datasources" : [ {
              "type" : "entity",
              "name" : "",
              "entityAliasId" : "d8459acd-8b50-4e20-9879-98e4eee9e6af",
              "dataKeys" : [ {
                "name" : "name",
                "type" : "entityField",
                "label" : "Name",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.07938867393368687
              }, {
                "name" : "energy",
                "type" : "timeseries",
                "label" : "energy",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.28802748592772986
              } ],
              "alarmFilterConfig" : {
                "statusList" : [ "ACTIVE" ]
              }
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY"
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1725565421780,
                  "endTimeMs" : 1725651821780
                },
                "quickInterval" : "CURRENT_DAY"
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#fff",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "0px",
            "settings" : {
              "useMarkdownTextFunction" : false,
              "markdownTextPattern" : "<h4>${entityName}</h4>  <b>Energy</b>: ${energy:N2} kWh\n",
              "markdownTextFunction" : "return '# Some title\\n - Entity name: ' + data[0]['entityName'];",
              "applyDefaultMarkdownStyle" : true,
              "markdownCss" : "b {\n    margin-left: 40px;\n}"
            },
            "title" : "Markdown/HTML Card",
            "showTitleIcon" : false,
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "widgetStyle" : { },
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "showLegend" : false,
            "useDashboardTimewindow" : true,
            "displayTimewindow" : true,
            "enableDataExport" : false,
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : ""
          },
          "row" : 0,
          "col" : 0,
          "id" : "1270c34a-f518-cc69-de13-dfc20a0876e5"
        },
        "1bc7831c-c485-a9bf-cca4-86db9b7363fc" : {
          "typeFullFqn" : "system.cards.entities_table",
          "type" : "latest",
          "sizeX" : 7.5,
          "sizeY" : 6.5,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 86400000,
                "quickInterval" : "CURRENT_DAY"
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1725566207073,
                  "endTimeMs" : 1725652607073
                },
                "quickInterval" : "CURRENT_DAY"
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSearch" : true,
              "enableSelectColumnDisplay" : true,
              "enableStickyHeader" : true,
              "enableStickyAction" : true,
              "reserveSpaceForHiddenAction" : "true",
              "displayEntityName" : false,
              "displayEntityLabel" : false,
              "displayEntityType" : false,
              "displayPagination" : true,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "name",
              "useRowStyleFunction" : false,
              "entitiesTitle" : "Child Assets"
            },
            "title" : "Entities table",
            "dropShadow" : false,
            "enableFullscreen" : false,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400,
              "padding" : "5px 10px 5px 10px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "name" : "",
              "entityAliasId" : "99d2962a-eb72-1087-cb8c-35de2944b513",
              "filterId" : null,
              "dataKeys" : [ {
                "name" : "name",
                "type" : "entityField",
                "label" : "Name",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.5537088123998315
              }, {
                "name" : "energy",
                "type" : "timeseries",
                "label" : "Energy (kWh)",
                "color" : "#4caf50",
                "settings" : { },
                "_hash" : 0.902156106462201,
                "decimals" : 0
              } ],
              "alarmFilterConfig" : {
                "statusList" : [ "ACTIVE" ]
              }
            } ],
            "displayTimewindow" : false,
            "configMode" : "advanced",
            "actions" : { },
            "showTitleIcon" : false,
            "titleIcon" : "list",
            "iconColor" : null,
            "titleFont" : null,
            "titleColor" : null,
            "enableDataExport" : false,
            "titleTooltip" : "",
            "widgetStyle" : { },
            "widgetCss" : "",
            "pageSize" : 1024,
            "noDataDisplayMessage" : ""
          },
          "row" : 0,
          "col" : 0,
          "id" : "1bc7831c-c485-a9bf-cca4-86db9b7363fc"
        }
      },
      "states" : {
        "default" : {
          "name" : "⚡ Energy Dashboard",
          "root" : true,
          "layouts" : {
            "main" : {
              "widgets" : {
                "0c9160c4-7d0a-7fb2-f6f6-c375746280a6" : {
                  "sizeX" : 7,
                  "sizeY" : 15,
                  "row" : 0,
                  "col" : 0
                },
                "1270c34a-f518-cc69-de13-dfc20a0876e5" : {
                  "sizeX" : 25,
                  "sizeY" : 2,
                  "row" : 0,
                  "col" : 7
                },
                "1bc7831c-c485-a9bf-cca4-86db9b7363fc" : {
                  "sizeX" : 25,
                  "sizeY" : 13,
                  "row" : 2,
                  "col" : 7
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#eeeeee",
                "columns" : 32,
                "margin" : 10,
                "outerMargin" : true,
                "backgroundSizeMode" : "100%",
                "autoFillHeight" : true,
                "backgroundImageUrl" : null,
                "mobileAutoFillHeight" : false,
                "mobileRowHeight" : 70
              }
            }
          }
        }
      },
      "entityAliases" : {
        "f6c3a823-2e17-e63f-fc06-07ea0aa28892" : {
          "id" : "f6c3a823-2e17-e63f-fc06-07ea0aa28892",
          "alias" : "Level 1 Assets",
          "filter" : {
            "type" : "assetType",
            "resolveMultiple" : true,
            "assetTypes" : [ "AL1" ],
            "assetNameFilter" : ""
          }
        },
        "d8459acd-8b50-4e20-9879-98e4eee9e6af" : {
          "id" : "d8459acd-8b50-4e20-9879-98e4eee9e6af",
          "alias" : "Selected Node",
          "filter" : {
            "type" : "stateEntity",
            "resolveMultiple" : false,
            "stateEntityParamName" : "selectedNode",
            "defaultStateEntity" : null
          }
        },
        "99d2962a-eb72-1087-cb8c-35de2944b513" : {
          "id" : "99d2962a-eb72-1087-cb8c-35de2944b513",
          "alias" : "Selected Node Childs",
          "filter" : {
            "type" : "relationsQuery",
            "resolveMultiple" : true,
            "rootStateEntity" : true,
            "stateEntityParamName" : "selectedNode",
            "defaultStateEntity" : null,
            "rootEntity" : null,
            "direction" : "TO",
            "maxLevel" : 1,
            "fetchLastLevelOnly" : false,
            "filters" : [ {
              "relationType" : "Contains",
              "entityTypes" : [ "ASSET" ]
            } ]
          }
        }
      },
      "filters" : { },
      "timewindow" : {
        "displayValue" : "",
        "hideInterval" : false,
        "hideLastInterval" : false,
        "hideQuickInterval" : false,
        "hideAggregation" : false,
        "hideAggInterval" : false,
        "hideTimezone" : false,
        "selectedTab" : 0,
        "realtime" : {
          "realtimeType" : 0,
          "interval" : 1000,
          "timewindowMs" : 60000,
          "quickInterval" : "CURRENT_DAY"
        },
        "history" : {
          "historyType" : 0,
          "interval" : 1000,
          "timewindowMs" : 60000,
          "fixedTimewindow" : {
            "startTimeMs" : 1725548922839,
            "endTimeMs" : 1725635322839
          },
          "quickInterval" : "CURRENT_DAY"
        },
        "aggregation" : {
          "type" : "AVG",
          "limit" : 25000
        }
      },
      "settings" : {
        "stateControllerId" : "entity",
        "showTitle" : false,
        "showDashboardsSelect" : true,
        "showEntitiesSelect" : true,
        "showDashboardTimewindow" : true,
        "showDashboardExport" : true,
        "toolbarAlwaysOpen" : true
      }
    },
    "customerId" : null,
    "externalId" : null,
    "id" : {
      "entityType" : "DASHBOARD",
      "id" : "e7225870-6c61-11ef-b2e2-65b916afcec8"
    },
    "image" : null,
    "mobileHide" : false,
    "mobileOrder" : null,
    "name" : "⚡ Energy Dashboard",
    "ownerId" : null,
    "title" : "⚡ Energy Dashboard"
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}