{
  "entityType" : "CONVERTER",
  "entity" : {
    "additionalInfo" : {
      "description" : ""
    },
    "configuration" : {
      "scriptLang" : "TBEL",
      "decoder" : null,
      "tbelDecoder" : "// Decode payload and extract plcData safely\r\nvar json = decodeToJson(payload);\r\nvar plc = (json && json.plcData) ? json.plcData : {};\r\n\r\n// Build telemetry (null-safe defaults)\r\nvar telemetry = {};\r\ntelemetry[\"inp1\"]   = (plc.inp1         != null) ? plc.inp1         : 0;\r\ntelemetry[\"relay1\"] = (plc.relay1       != null) ? plc.relay1       : 0;\r\ntelemetry[\"relay2\"] = (plc.relay2       != null) ? plc.relay2       : 0;\r\ntelemetry[\"relay3\"] = (plc.relay3       != null) ? plc.relay3       : 0;\r\ntelemetry[\"key\"]    = (plc.key          != null) ? plc.key          : 0;\r\ntelemetry[\"reset\"]  = (plc.resetStatus  != null) ? plc.resetStatus  : 0;\r\n\r\n// Attributes (kept for future use)\r\nvar attributes = {};\r\n\r\n// --- Edge detection on relay1 ---\r\nvar prevRelay1 = (metadata.prevRelay1 != null) ? metadata.prevRelay1 : null;\r\nvar currRelay1 = telemetry[\"relay1\"];\r\n\r\nif (prevRelay1 != null) {\r\n  if (prevRelay1 === 0 && currRelay1 === 1) {\r\n    // Rising edge: 0 -> 1\r\n    telemetry[\"aperto\"] = 1;\r\n  } else if (prevRelay1 === 1 && currRelay1 === 0) {\r\n    // Falling edge: 1 -> 0\r\n    telemetry[\"chiuso\"] = 0;\r\n  }\r\n}\r\n\r\n// Persist current state for next invocation\r\nmetadata.prevRelay1 = currRelay1;\r\n\r\n// Return ThingsBoard message\r\nreturn {\r\n  deviceName: \"M5\",\r\n  deviceType: \"test\",\r\n  attributes: attributes,\r\n  telemetry: telemetry\r\n};",
      "encoder" : null,
      "tbelEncoder" : null,
      "updateOnlyKeys" : null
    },
    "converterVersion" : 1,
    "debugMode" : false,
    "debugSettings" : {
      "allEnabled" : false,
      "allEnabledUntil" : 1751640111743,
      "failuresEnabled" : true
    },
    "edgeTemplate" : false,
    "externalId" : null,
    "id" : {
      "entityType" : "CONVERTER",
      "id" : "ed6926f0-58e2-11f0-9cc7-dfa7f57094de"
    },
    "integrationType" : "MQTT",
    "name" : "stam PLC armadi",
    "type" : "UPLINK"
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}