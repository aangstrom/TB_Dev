{
  "entityType" : "CONVERTER",
  "entity" : {
    "additionalInfo" : {
      "description" : ""
    },
    "configuration" : {
      "decoder" : "/** Decoder **/\n\n// decode payload to string\nvar payloadStr = decodeToString(payload).replaceAll(\"\\\\+\",\" \").replace('{','{\"').replace(' : ', '\":\"').replace(' : ', '\":\"').replace(\"\\,\",'\",\"').replace(\"\\, \",'\",\"').replaceAll(' ','').replaceAll('\"\"','\"');\nvar data = JSON.parse(payloadStr);\nvar topicPattern = 'Palmieri/(.+)/DataReceve';\n\n//var deviceName =  metadata.topic.match(topicPattern)[1];\n// decode payload to JSON\nvar deviceType = 'sensor';\n\n// Result object with device attributes/telemetry data\nvar result = {\n   //deviceName: deviceName,\n   deviceType: deviceType,\n   telemetry: {\n       stProcData: data.stProcData,\n       stProcTime: data.stProcTime,\n       idScavo: data.idScavo,\n       pressSpinta: data.pressSpinta,\n       lunghScavo: data.lunghScavo,\n       allarme_off: array(data.dword68,1),\n       preallarme_off: array(data.dword68,2),\n   }\n};\n\n/** Helper functions **/\n\nfunction decodeToString(payload) {\n   return String.fromCharCode.apply(String, payload);\n}\n\nfunction decodeToJson(payload) {\n   // convert payload to string.\n   var str = decodeToString(payload);\n\n   // parse string to JSON\n   var data = JSON.parse(str);\n   return data;\n}\n\nfunction array(x,y){\n    var multiplier = 2^y;\n    if ((x & multiplier)==0){\n        return false;\n    }\n    else{\n        return true;\n    }\n}\n\n\nreturn result;",
      "encoder" : null
    },
    "createdTime" : 1666868211582,
    "debugMode" : true,
    "edgeTemplate" : false,
    "externalId" : null,
    "id" : {
      "entityType" : "CONVERTER",
      "id" : "0fe469e0-55e6-11ed-9133-91f5585bc6c3"
    },
    "name" : "Pato Uplink Converter",
    "tenantId" : null,
    "type" : "UPLINK"
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}